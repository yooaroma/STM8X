                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.10 #13778 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_mib_debug_cmd
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _getdec
                                     12 	.globl _mib_printf
                                     13 	.globl _MibGetSecs
                                     14 	.globl _MibReadDebugByte
                                     15 	.globl _MibWriteDebugString
                                     16 	.globl _MibWriteDebugByte
                                     17 	.globl ___memcpy
                                     18 	.globl _strlen
                                     19 	.globl _memset
                                     20 	.globl _strncmp
                                     21 	.globl _cmdTbl
                                     22 	.globl _cmd_list
                                     23 	.globl _GetCommand
                                     24 	.globl _GetArgs
                                     25 	.globl _HexToInt
                                     26 	.globl _DecToLong
                                     27 	.globl _HexDump
                                     28 	.globl _DoPrintHelp
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DATA
      000000                         33 _cmd_list::
      000000                         34 	.ds 258
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area INITIALIZED
      000000                         39 _cmdTbl::
      000000                         40 	.ds 36
                                     41 ;--------------------------------------------------------
                                     42 ; absolute external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DABS (ABS)
                                     45 
                                     46 ; default segment ordering for linker
                                     47 	.area HOME
                                     48 	.area GSINIT
                                     49 	.area GSFINAL
                                     50 	.area CONST
                                     51 	.area INITIALIZER
                                     52 	.area CODE
                                     53 
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area HOME
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area HOME
                                     65 	.area HOME
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area CODE
                                     70 ;	./../../mib/stm8s_mib_debug_cmd.c: 85: int GetCommand(char *cmd, uint16_t len, uint8_t timeout)
                                     71 ;	-----------------------------------------
                                     72 ;	 function GetCommand
                                     73 ;	-----------------------------------------
      000000                         74 _GetCommand:
      000000 52 10            [ 2]   75 	sub	sp, #16
      000002 1F 0D            [ 2]   76 	ldw	(0x0d, sp), x
                                     77 ;	./../../mib/stm8s_mib_debug_cmd.c: 88: uint16_t vwIndex, rdCnt, rdMax = len - 1;
      000004 1E 13            [ 2]   78 	ldw	x, (0x13, sp)
      000006 5A               [ 2]   79 	decw	x
      000007 1F 01            [ 2]   80 	ldw	(0x01, sp), x
                                     81 ;	./../../mib/stm8s_mib_debug_cmd.c: 91: endTime = MibGetSecs() + (uint16_t)timeout;
      000009 CDr00r00         [ 4]   82 	call	_MibGetSecs
      00000C 7B 15            [ 1]   83 	ld	a, (0x15, sp)
      00000E 6B 10            [ 1]   84 	ld	(0x10, sp), a
      000010 0F 0F            [ 1]   85 	clr	(0x0f, sp)
      000012 72 FB 0F         [ 2]   86 	addw	x, (0x0f, sp)
      000015 1F 03            [ 2]   87 	ldw	(0x03, sp), x
                                     88 ;	./../../mib/stm8s_mib_debug_cmd.c: 92: cmd_list.cur = cmd_list.next;
      000017 C6u00u01         [ 1]   89 	ld	a, _cmd_list+1
      00001A C7u00u00         [ 1]   90 	ld	_cmd_list+0, a
                                     91 ;	./../../mib/stm8s_mib_debug_cmd.c: 93: for (rdCnt = 0, vwIndex = 0; rdCnt <= rdMax;)
      00001D 5F               [ 1]   92 	clrw	x
      00001E 1F 0F            [ 2]   93 	ldw	(0x0f, sp), x
      000020                         94 00149$:
      000020 1E 0F            [ 2]   95 	ldw	x, (0x0f, sp)
      000022 13 01            [ 2]   96 	cpw	x, (0x01, sp)
      000024 23 03            [ 2]   97 	jrule	00243$
      000026 CCr01rF3         [ 2]   98 	jp	00147$
      000029                         99 00243$:
                                    100 ;	./../../mib/stm8s_mib_debug_cmd.c: 96: while (1)
      000029                        101 00106$:
                                    102 ;	./../../mib/stm8s_mib_debug_cmd.c: 98: vwCh = MibReadDebugByte();
      000029 CDr00r00         [ 4]  103 	call	_MibReadDebugByte
                                    104 ;	./../../mib/stm8s_mib_debug_cmd.c: 99: if (vwCh != 0xffff)	break;
      00002C 1F 05            [ 2]  105 	ldw	(0x05, sp), x
      00002E 1F 07            [ 2]  106 	ldw	(0x07, sp), x
                                    107 ;	./../../mib/stm8s_mib_debug_cmd.c: 102: cmd[rdCnt++] = '\0';
      000030 1E 0F            [ 2]  108 	ldw	x, (0x0f, sp)
      000032 5C               [ 1]  109 	incw	x
      000033 1F 09            [ 2]  110 	ldw	(0x09, sp), x
                                    111 ;	./../../mib/stm8s_mib_debug_cmd.c: 104: memcpy(cmd_list.buf[cmd_list.next], cmd, strlen(cmd));
      000035 16 0D            [ 2]  112 	ldw	y, (0x0d, sp)
      000037 17 0B            [ 2]  113 	ldw	(0x0b, sp), y
                                    114 ;	./../../mib/stm8s_mib_debug_cmd.c: 99: if (vwCh != 0xffff)	break;
      000039 1E 07            [ 2]  115 	ldw	x, (0x07, sp)
      00003B 5C               [ 1]  116 	incw	x
      00003C 26 55            [ 1]  117 	jrne	00107$
                                    118 ;	./../../mib/stm8s_mib_debug_cmd.c: 100: if (MibGetSecs() > endTime)
      00003E CDr00r00         [ 4]  119 	call	_MibGetSecs
      000041 13 03            [ 2]  120 	cpw	x, (0x03, sp)
      000043 23 E4            [ 2]  121 	jrule	00106$
                                    122 ;	./../../mib/stm8s_mib_debug_cmd.c: 102: cmd[rdCnt++] = '\0';
      000045 1E 0F            [ 2]  123 	ldw	x, (0x0f, sp)
      000047 16 09            [ 2]  124 	ldw	y, (0x09, sp)
      000049 17 0F            [ 2]  125 	ldw	(0x0f, sp), y
      00004B 72 FB 0D         [ 2]  126 	addw	x, (0x0d, sp)
      00004E 7F               [ 1]  127 	clr	(x)
                                    128 ;	./../../mib/stm8s_mib_debug_cmd.c: 103: memset(cmd_list.buf[cmd_list.next], 0, CMD_CHAR_MAX);
      00004F C6u00u01         [ 1]  129 	ld	a, _cmd_list+1
      000052 97               [ 1]  130 	ld	xl, a
      000053 A6 40            [ 1]  131 	ld	a, #0x40
      000055 42               [ 4]  132 	mul	x, a
      000056 1Cr00r02         [ 2]  133 	addw	x, #(_cmd_list+2)
      000059 4B 40            [ 1]  134 	push	#0x40
      00005B 4B 00            [ 1]  135 	push	#0x00
      00005D 4B 00            [ 1]  136 	push	#0x00
      00005F 4B 00            [ 1]  137 	push	#0x00
      000061 CDr00r00         [ 4]  138 	call	_memset
                                    139 ;	./../../mib/stm8s_mib_debug_cmd.c: 104: memcpy(cmd_list.buf[cmd_list.next], cmd, strlen(cmd));
      000064 1E 0D            [ 2]  140 	ldw	x, (0x0d, sp)
      000066 CDr00r00         [ 4]  141 	call	_strlen
      000069 51               [ 1]  142 	exgw	x, y
      00006A C6u00u01         [ 1]  143 	ld	a, _cmd_list+1
      00006D 97               [ 1]  144 	ld	xl, a
      00006E A6 40            [ 1]  145 	ld	a, #0x40
      000070 42               [ 4]  146 	mul	x, a
      000071 1Cr00r02         [ 2]  147 	addw	x, #(_cmd_list+2)
      000074 90 89            [ 2]  148 	pushw	y
      000076 16 0D            [ 2]  149 	ldw	y, (0x0d, sp)
      000078 90 89            [ 2]  150 	pushw	y
      00007A CDr00r00         [ 4]  151 	call	___memcpy
                                    152 ;	./../../mib/stm8s_mib_debug_cmd.c: 105: cmd_list.next = (cmd_list.next + 1) % CMD_LINE_MAX;
      00007D C6u00u01         [ 1]  153 	ld	a, _cmd_list+1
      000080 5F               [ 1]  154 	clrw	x
      000081 97               [ 1]  155 	ld	xl, a
      000082 5C               [ 1]  156 	incw	x
      000083 4B 04            [ 1]  157 	push	#0x04
      000085 4B 00            [ 1]  158 	push	#0x00
      000087 CDr00r00         [ 4]  159 	call	__modsint
      00008A 9F               [ 1]  160 	ld	a, xl
      00008B C7u00u01         [ 1]  161 	ld	_cmd_list+1, a
                                    162 ;	./../../mib/stm8s_mib_debug_cmd.c: 106: return rdCnt;
      00008E 1E 0F            [ 2]  163 	ldw	x, (0x0f, sp)
      000090 CCr01rF5         [ 2]  164 	jp	00151$
      000093                        165 00107$:
                                    166 ;	./../../mib/stm8s_mib_debug_cmd.c: 112: if ((vwCh == '@') || (vwCh == '\n') || (vwCh == 0x03))
      000093 1E 07            [ 2]  167 	ldw	x, (0x07, sp)
      000095 A3 00 40         [ 2]  168 	cpw	x, #0x0040
      000098 27 0E            [ 1]  169 	jreq	00142$
      00009A 1E 07            [ 2]  170 	ldw	x, (0x07, sp)
      00009C A3 00 0A         [ 2]  171 	cpw	x, #0x000a
      00009F 27 07            [ 1]  172 	jreq	00142$
      0000A1 1E 07            [ 2]  173 	ldw	x, (0x07, sp)
      0000A3 A3 00 03         [ 2]  174 	cpw	x, #0x0003
      0000A6 26 57            [ 1]  175 	jrne	00143$
      0000A8                        176 00142$:
                                    177 ;	./../../mib/stm8s_mib_debug_cmd.c: 114: cmd[rdCnt++] = '\0';
      0000A8 1E 0F            [ 2]  178 	ldw	x, (0x0f, sp)
      0000AA 16 09            [ 2]  179 	ldw	y, (0x09, sp)
      0000AC 17 0F            [ 2]  180 	ldw	(0x0f, sp), y
      0000AE 72 FB 0D         [ 2]  181 	addw	x, (0x0d, sp)
      0000B1 7F               [ 1]  182 	clr	(x)
                                    183 ;	./../../mib/stm8s_mib_debug_cmd.c: 115: memset(cmd_list.buf[cmd_list.next], 0, CMD_CHAR_MAX);
      0000B2 C6u00u01         [ 1]  184 	ld	a, _cmd_list+1
      0000B5 97               [ 1]  185 	ld	xl, a
      0000B6 A6 40            [ 1]  186 	ld	a, #0x40
      0000B8 42               [ 4]  187 	mul	x, a
      0000B9 1Cr00r02         [ 2]  188 	addw	x, #(_cmd_list+2)
      0000BC 4B 40            [ 1]  189 	push	#0x40
      0000BE 4B 00            [ 1]  190 	push	#0x00
      0000C0 4B 00            [ 1]  191 	push	#0x00
      0000C2 4B 00            [ 1]  192 	push	#0x00
      0000C4 CDr00r00         [ 4]  193 	call	_memset
                                    194 ;	./../../mib/stm8s_mib_debug_cmd.c: 116: memcpy(cmd_list.buf[cmd_list.next], cmd, strlen(cmd));
      0000C7 1E 0D            [ 2]  195 	ldw	x, (0x0d, sp)
      0000C9 CDr00r00         [ 4]  196 	call	_strlen
      0000CC 51               [ 1]  197 	exgw	x, y
      0000CD C6u00u01         [ 1]  198 	ld	a, _cmd_list+1
      0000D0 97               [ 1]  199 	ld	xl, a
      0000D1 A6 40            [ 1]  200 	ld	a, #0x40
      0000D3 42               [ 4]  201 	mul	x, a
      0000D4 1Cr00r02         [ 2]  202 	addw	x, #(_cmd_list+2)
      0000D7 90 89            [ 2]  203 	pushw	y
      0000D9 16 0D            [ 2]  204 	ldw	y, (0x0d, sp)
      0000DB 90 89            [ 2]  205 	pushw	y
      0000DD CDr00r00         [ 4]  206 	call	___memcpy
                                    207 ;	./../../mib/stm8s_mib_debug_cmd.c: 117: cmd_list.next = (cmd_list.next + 1) % CMD_LINE_MAX;
      0000E0 C6u00u01         [ 1]  208 	ld	a, _cmd_list+1
      0000E3 5F               [ 1]  209 	clrw	x
      0000E4 97               [ 1]  210 	ld	xl, a
      0000E5 5C               [ 1]  211 	incw	x
      0000E6 4B 04            [ 1]  212 	push	#0x04
      0000E8 4B 00            [ 1]  213 	push	#0x00
      0000EA CDr00r00         [ 4]  214 	call	__modsint
      0000ED 9F               [ 1]  215 	ld	a, xl
      0000EE C7u00u01         [ 1]  216 	ld	_cmd_list+1, a
                                    217 ;	./../../mib/stm8s_mib_debug_cmd.c: 119: mib_printf("\r\n");
      0000F1 4Br00            [ 1]  218 	push	#<(___str_0+0)
      0000F3 4Bs00            [ 1]  219 	push	#((___str_0+0) >> 8)
      0000F5 CDr00r00         [ 4]  220 	call	_mib_printf
      0000F8 5B 02            [ 2]  221 	addw	sp, #2
                                    222 ;	./../../mib/stm8s_mib_debug_cmd.c: 120: return rdCnt;
      0000FA 1E 0F            [ 2]  223 	ldw	x, (0x0f, sp)
      0000FC CCr01rF5         [ 2]  224 	jp	00151$
      0000FF                        225 00143$:
                                    226 ;	./../../mib/stm8s_mib_debug_cmd.c: 122: else if (vwCh == '\b')
      0000FF 1E 07            [ 2]  227 	ldw	x, (0x07, sp)
      000101 A3 00 08         [ 2]  228 	cpw	x, #0x0008
      000104 26 18            [ 1]  229 	jrne	00140$
                                    230 ;	./../../mib/stm8s_mib_debug_cmd.c: 124: if (rdCnt > 0)
      000106 1E 0F            [ 2]  231 	ldw	x, (0x0f, sp)
      000108 26 03            [ 1]  232 	jrne	00260$
      00010A CCr00r20         [ 2]  233 	jp	00149$
      00010D                        234 00260$:
                                    235 ;	./../../mib/stm8s_mib_debug_cmd.c: 126: rdCnt--;
      00010D 1E 0F            [ 2]  236 	ldw	x, (0x0f, sp)
      00010F 5A               [ 2]  237 	decw	x
      000110 1F 0F            [ 2]  238 	ldw	(0x0f, sp), x
                                    239 ;	./../../mib/stm8s_mib_debug_cmd.c: 128: mib_printf("\b \b");
      000112 4Br03            [ 1]  240 	push	#<(___str_1+0)
      000114 4Bs00            [ 1]  241 	push	#((___str_1+0) >> 8)
      000116 CDr00r00         [ 4]  242 	call	_mib_printf
      000119 5B 02            [ 2]  243 	addw	sp, #2
      00011B CCr00r20         [ 2]  244 	jp	00149$
      00011E                        245 00140$:
                                    246 ;	./../../mib/stm8s_mib_debug_cmd.c: 131: else if (vwCh == 0x1b)
      00011E 1E 07            [ 2]  247 	ldw	x, (0x07, sp)
      000120 A3 00 1B         [ 2]  248 	cpw	x, #0x001b
      000123 27 03            [ 1]  249 	jreq	00263$
      000125 CCr01rE1         [ 2]  250 	jp	00137$
      000128                        251 00263$:
                                    252 ;	./../../mib/stm8s_mib_debug_cmd.c: 134: while (1)
      000128                        253 00113$:
                                    254 ;	./../../mib/stm8s_mib_debug_cmd.c: 136: vwCh = MibReadDebugByte();
      000128 CDr00r00         [ 4]  255 	call	_MibReadDebugByte
                                    256 ;	./../../mib/stm8s_mib_debug_cmd.c: 137: if (vwCh != 0xffff)
      00012B A3 FF FF         [ 2]  257 	cpw	x, #0xffff
      00012E 27 F8            [ 1]  258 	jreq	00113$
                                    259 ;	./../../mib/stm8s_mib_debug_cmd.c: 140: if (vwCh == '[')
      000130 A3 00 5B         [ 2]  260 	cpw	x, #0x005b
      000133 27 03            [ 1]  261 	jreq	00269$
      000135 CCr00r20         [ 2]  262 	jp	00149$
      000138                        263 00269$:
                                    264 ;	./../../mib/stm8s_mib_debug_cmd.c: 143: while (1)
      000138                        265 00118$:
                                    266 ;	./../../mib/stm8s_mib_debug_cmd.c: 145: vwCh = MibReadDebugByte();
      000138 CDr00r00         [ 4]  267 	call	_MibReadDebugByte
                                    268 ;	./../../mib/stm8s_mib_debug_cmd.c: 146: if (vwCh != 0xffff)
      00013B 1F 09            [ 2]  269 	ldw	(0x09, sp), x
      00013D 5C               [ 1]  270 	incw	x
      00013E 27 F8            [ 1]  271 	jreq	00118$
                                    272 ;	./../../mib/stm8s_mib_debug_cmd.c: 150: if (vwCh == 'B')
      000140 1E 09            [ 2]  273 	ldw	x, (0x09, sp)
      000142 A3 00 42         [ 2]  274 	cpw	x, #0x0042
      000145 26 48            [ 1]  275 	jrne	00132$
                                    276 ;	./../../mib/stm8s_mib_debug_cmd.c: 152: cmd_list.cur++;
      000147 C6u00u00         [ 1]  277 	ld	a, _cmd_list+0
      00014A 4C               [ 1]  278 	inc	a
      00014B C7u00u00         [ 1]  279 	ld	_cmd_list+0, a
                                    280 ;	./../../mib/stm8s_mib_debug_cmd.c: 153: if (cmd_list.cur == CMD_LINE_MAX)
      00014E A1 04            [ 1]  281 	cp	a, #0x04
      000150 26 04            [ 1]  282 	jrne	00121$
                                    283 ;	./../../mib/stm8s_mib_debug_cmd.c: 154: cmd_list.cur = 0;
      000152 35 00u00u00      [ 1]  284 	mov	_cmd_list+0, #0x00
      000156                        285 00121$:
                                    286 ;	./../../mib/stm8s_mib_debug_cmd.c: 155: rdCnt = strlen(cmd_list.buf[cmd_list.cur]);
      000156 C6u00u00         [ 1]  287 	ld	a, _cmd_list+0
      000159 97               [ 1]  288 	ld	xl, a
      00015A A6 40            [ 1]  289 	ld	a, #0x40
      00015C 42               [ 4]  290 	mul	x, a
      00015D 1Cr00r02         [ 2]  291 	addw	x, #(_cmd_list+2)
      000160 CDr00r00         [ 4]  292 	call	_strlen
                                    293 ;	./../../mib/stm8s_mib_debug_cmd.c: 156: if (rdCnt >= rdMax)
      000163 1F 0F            [ 2]  294 	ldw	(0x0f, sp), x
      000165 13 01            [ 2]  295 	cpw	x, (0x01, sp)
      000167 25 04            [ 1]  296 	jrc	00123$
                                    297 ;	./../../mib/stm8s_mib_debug_cmd.c: 157: rdCnt = rdMax;
      000169 16 01            [ 2]  298 	ldw	y, (0x01, sp)
      00016B 17 0F            [ 2]  299 	ldw	(0x0f, sp), y
      00016D                        300 00123$:
                                    301 ;	./../../mib/stm8s_mib_debug_cmd.c: 158: memcpy(cmd, cmd_list.buf[cmd_list.cur], rdCnt);
      00016D 16 0F            [ 2]  302 	ldw	y, (0x0f, sp)
      00016F C6u00u00         [ 1]  303 	ld	a, _cmd_list+0
      000172 97               [ 1]  304 	ld	xl, a
      000173 A6 40            [ 1]  305 	ld	a, #0x40
      000175 42               [ 4]  306 	mul	x, a
      000176 1Cr00r02         [ 2]  307 	addw	x, #(_cmd_list+2)
      000179 90 89            [ 2]  308 	pushw	y
      00017B 89               [ 2]  309 	pushw	x
      00017C 1E 0F            [ 2]  310 	ldw	x, (0x0f, sp)
      00017E CDr00r00         [ 4]  311 	call	___memcpy
                                    312 ;	./../../mib/stm8s_mib_debug_cmd.c: 159: cmd[rdCnt] = 0;
      000181 1E 0D            [ 2]  313 	ldw	x, (0x0d, sp)
      000183 72 FB 0F         [ 2]  314 	addw	x, (0x0f, sp)
      000186 7F               [ 1]  315 	clr	(x)
                                    316 ;	./../../mib/stm8s_mib_debug_cmd.c: 161: MibWriteDebugString(cmd);
      000187 1E 0D            [ 2]  317 	ldw	x, (0x0d, sp)
      000189 CDr00r00         [ 4]  318 	call	_MibWriteDebugString
      00018C CCr00r20         [ 2]  319 	jp	00149$
      00018F                        320 00132$:
                                    321 ;	./../../mib/stm8s_mib_debug_cmd.c: 163: else if (vwCh == 'A')
      00018F 1E 09            [ 2]  322 	ldw	x, (0x09, sp)
      000191 A3 00 41         [ 2]  323 	cpw	x, #0x0041
      000194 27 03            [ 1]  324 	jreq	00282$
      000196 CCr00r20         [ 2]  325 	jp	00149$
      000199                        326 00282$:
                                    327 ;	./../../mib/stm8s_mib_debug_cmd.c: 152: cmd_list.cur++;
                                    328 ;	./../../mib/stm8s_mib_debug_cmd.c: 165: if (cmd_list.cur == 0)
      000199 C6u00u00         [ 1]  329 	ld	a, _cmd_list+0
      00019C 26 06            [ 1]  330 	jrne	00125$
                                    331 ;	./../../mib/stm8s_mib_debug_cmd.c: 166: cmd_list.cur = CMD_LINE_MAX - 1;
      00019E 35 03u00u00      [ 1]  332 	mov	_cmd_list+0, #0x03
      0001A2 20 04            [ 2]  333 	jra	00126$
      0001A4                        334 00125$:
                                    335 ;	./../../mib/stm8s_mib_debug_cmd.c: 168: cmd_list.cur--;
      0001A4 4A               [ 1]  336 	dec	a
      0001A5 C7u00u00         [ 1]  337 	ld	_cmd_list+0, a
      0001A8                        338 00126$:
                                    339 ;	./../../mib/stm8s_mib_debug_cmd.c: 169: rdCnt = strlen(cmd_list.buf[cmd_list.cur]);
      0001A8 C6u00u00         [ 1]  340 	ld	a, _cmd_list+0
      0001AB 97               [ 1]  341 	ld	xl, a
      0001AC A6 40            [ 1]  342 	ld	a, #0x40
      0001AE 42               [ 4]  343 	mul	x, a
      0001AF 1Cr00r02         [ 2]  344 	addw	x, #(_cmd_list+2)
      0001B2 CDr00r00         [ 4]  345 	call	_strlen
                                    346 ;	./../../mib/stm8s_mib_debug_cmd.c: 170: if (rdCnt >= rdMax)
      0001B5 1F 0F            [ 2]  347 	ldw	(0x0f, sp), x
      0001B7 13 01            [ 2]  348 	cpw	x, (0x01, sp)
      0001B9 25 04            [ 1]  349 	jrc	00128$
                                    350 ;	./../../mib/stm8s_mib_debug_cmd.c: 171: rdCnt = rdMax;
      0001BB 16 01            [ 2]  351 	ldw	y, (0x01, sp)
      0001BD 17 0F            [ 2]  352 	ldw	(0x0f, sp), y
      0001BF                        353 00128$:
                                    354 ;	./../../mib/stm8s_mib_debug_cmd.c: 172: memcpy(cmd, cmd_list.buf[cmd_list.cur], rdCnt);
      0001BF 16 0F            [ 2]  355 	ldw	y, (0x0f, sp)
      0001C1 C6u00u00         [ 1]  356 	ld	a, _cmd_list+0
      0001C4 97               [ 1]  357 	ld	xl, a
      0001C5 A6 40            [ 1]  358 	ld	a, #0x40
      0001C7 42               [ 4]  359 	mul	x, a
      0001C8 1Cr00r02         [ 2]  360 	addw	x, #(_cmd_list+2)
      0001CB 90 89            [ 2]  361 	pushw	y
      0001CD 89               [ 2]  362 	pushw	x
      0001CE 1E 0F            [ 2]  363 	ldw	x, (0x0f, sp)
      0001D0 CDr00r00         [ 4]  364 	call	___memcpy
                                    365 ;	./../../mib/stm8s_mib_debug_cmd.c: 173: cmd[rdCnt] = 0;
      0001D3 1E 0D            [ 2]  366 	ldw	x, (0x0d, sp)
      0001D5 72 FB 0F         [ 2]  367 	addw	x, (0x0f, sp)
      0001D8 7F               [ 1]  368 	clr	(x)
                                    369 ;	./../../mib/stm8s_mib_debug_cmd.c: 175: MibWriteDebugString(cmd);
      0001D9 1E 0D            [ 2]  370 	ldw	x, (0x0d, sp)
      0001DB CDr00r00         [ 4]  371 	call	_MibWriteDebugString
      0001DE CCr00r20         [ 2]  372 	jp	00149$
      0001E1                        373 00137$:
                                    374 ;	./../../mib/stm8s_mib_debug_cmd.c: 181: cmd[rdCnt++] = vwCh;
      0001E1 1E 0F            [ 2]  375 	ldw	x, (0x0f, sp)
      0001E3 16 09            [ 2]  376 	ldw	y, (0x09, sp)
      0001E5 17 0F            [ 2]  377 	ldw	(0x0f, sp), y
      0001E7 72 FB 0D         [ 2]  378 	addw	x, (0x0d, sp)
      0001EA 7B 06            [ 1]  379 	ld	a, (0x06, sp)
      0001EC F7               [ 1]  380 	ld	(x), a
                                    381 ;	./../../mib/stm8s_mib_debug_cmd.c: 183: MibWriteDebugByte(vwCh);
      0001ED CDr00r00         [ 4]  382 	call	_MibWriteDebugByte
      0001F0 CCr00r20         [ 2]  383 	jp	00149$
      0001F3                        384 00147$:
                                    385 ;	./../../mib/stm8s_mib_debug_cmd.c: 186: return (rdCnt);
      0001F3 1E 0F            [ 2]  386 	ldw	x, (0x0f, sp)
      0001F5                        387 00151$:
                                    388 ;	./../../mib/stm8s_mib_debug_cmd.c: 187: } // GetCommand.
      0001F5 16 11            [ 2]  389 	ldw	y, (17, sp)
      0001F7 5B 15            [ 2]  390 	addw	sp, #21
      0001F9 90 FC            [ 2]  391 	jp	(y)
                                    392 ;	./../../mib/stm8s_mib_debug_cmd.c: 197: int GetArgs(char *s, char **argv)
                                    393 ;	-----------------------------------------
                                    394 ;	 function GetArgs
                                    395 ;	-----------------------------------------
      0001FB                        396 _GetArgs:
      0001FB 52 08            [ 2]  397 	sub	sp, #8
      0001FD 1F 05            [ 2]  398 	ldw	(0x05, sp), x
                                    399 ;	./../../mib/stm8s_mib_debug_cmd.c: 199: int args = 0;
      0001FF 5F               [ 1]  400 	clrw	x
      000200 1F 01            [ 2]  401 	ldw	(0x01, sp), x
                                    402 ;	./../../mib/stm8s_mib_debug_cmd.c: 201: if (!s || *s == '\0')
      000202 1E 05            [ 2]  403 	ldw	x, (0x05, sp)
      000204 27 03            [ 1]  404 	jreq	00101$
      000206 F6               [ 1]  405 	ld	a, (x)
      000207 26 03            [ 1]  406 	jrne	00131$
      000209                        407 00101$:
                                    408 ;	./../../mib/stm8s_mib_debug_cmd.c: 202: return 0;
      000209 5F               [ 1]  409 	clrw	x
      00020A 20 73            [ 2]  410 	jra	00120$
                                    411 ;	./../../mib/stm8s_mib_debug_cmd.c: 203: while (args < MAX_ARGS)
      00020C                        412 00131$:
      00020C 5F               [ 1]  413 	clrw	x
      00020D 1F 07            [ 2]  414 	ldw	(0x07, sp), x
      00020F                        415 00117$:
      00020F 1E 07            [ 2]  416 	ldw	x, (0x07, sp)
      000211 A3 00 05         [ 2]  417 	cpw	x, #0x0005
      000214 2E 67            [ 1]  418 	jrsge	00119$
                                    419 ;	./../../mib/stm8s_mib_debug_cmd.c: 206: while ((*s == ' ') || (*s == '\t'))
      000216 1E 05            [ 2]  420 	ldw	x, (0x05, sp)
      000218                        421 00105$:
      000218 F6               [ 1]  422 	ld	a, (x)
      000219 A1 20            [ 1]  423 	cp	a, #0x20
      00021B 27 04            [ 1]  424 	jreq	00106$
      00021D A1 09            [ 1]  425 	cp	a, #0x09
      00021F 26 03            [ 1]  426 	jrne	00107$
      000221                        427 00106$:
                                    428 ;	./../../mib/stm8s_mib_debug_cmd.c: 207: s++;
      000221 5C               [ 1]  429 	incw	x
      000222 20 F4            [ 2]  430 	jra	00105$
      000224                        431 00107$:
                                    432 ;	./../../mib/stm8s_mib_debug_cmd.c: 210: if (*s == '\0')
      000224 4D               [ 1]  433 	tnz	a
      000225 26 0D            [ 1]  434 	jrne	00109$
                                    435 ;	./../../mib/stm8s_mib_debug_cmd.c: 212: argv[args] = 0;
      000227 1E 01            [ 2]  436 	ldw	x, (0x01, sp)
      000229 58               [ 2]  437 	sllw	x
      00022A 72 FB 0B         [ 2]  438 	addw	x, (0x0b, sp)
      00022D 6F 01            [ 1]  439 	clr	(0x1, x)
      00022F 7F               [ 1]  440 	clr	(x)
                                    441 ;	./../../mib/stm8s_mib_debug_cmd.c: 213: return args;
      000230 1E 01            [ 2]  442 	ldw	x, (0x01, sp)
      000232 20 4B            [ 2]  443 	jra	00120$
      000234                        444 00109$:
                                    445 ;	./../../mib/stm8s_mib_debug_cmd.c: 216: argv[args++] = s;
      000234 16 07            [ 2]  446 	ldw	y, (0x07, sp)
      000236 17 03            [ 2]  447 	ldw	(0x03, sp), y
      000238 16 07            [ 2]  448 	ldw	y, (0x07, sp)
      00023A 90 5C            [ 1]  449 	incw	y
      00023C 17 07            [ 2]  450 	ldw	(0x07, sp), y
      00023E 17 01            [ 2]  451 	ldw	(0x01, sp), y
      000240 16 03            [ 2]  452 	ldw	y, (0x03, sp)
      000242 90 58            [ 2]  453 	sllw	y
      000244 72 F9 0B         [ 2]  454 	addw	y, (0x0b, sp)
      000247 90 FF            [ 2]  455 	ldw	(y), x
                                    456 ;	./../../mib/stm8s_mib_debug_cmd.c: 219: while (*s && (*s != ' ') && (*s != '\t'))
      000249 1F 05            [ 2]  457 	ldw	(0x05, sp), x
      00024B                        458 00112$:
      00024B 1E 05            [ 2]  459 	ldw	x, (0x05, sp)
      00024D F6               [ 1]  460 	ld	a, (x)
                                    461 ;	./../../mib/stm8s_mib_debug_cmd.c: 220: s++;
      00024E 1E 05            [ 2]  462 	ldw	x, (0x05, sp)
      000250 5C               [ 1]  463 	incw	x
      000251 1F 03            [ 2]  464 	ldw	(0x03, sp), x
                                    465 ;	./../../mib/stm8s_mib_debug_cmd.c: 219: while (*s && (*s != ' ') && (*s != '\t'))
      000253 4D               [ 1]  466 	tnz	a
      000254 27 0E            [ 1]  467 	jreq	00114$
      000256 A1 20            [ 1]  468 	cp	a, #0x20
      000258 27 0A            [ 1]  469 	jreq	00114$
      00025A A1 09            [ 1]  470 	cp	a, #0x09
      00025C 27 06            [ 1]  471 	jreq	00114$
                                    472 ;	./../../mib/stm8s_mib_debug_cmd.c: 220: s++;
      00025E 16 03            [ 2]  473 	ldw	y, (0x03, sp)
      000260 17 05            [ 2]  474 	ldw	(0x05, sp), y
      000262 20 E7            [ 2]  475 	jra	00112$
      000264                        476 00114$:
                                    477 ;	./../../mib/stm8s_mib_debug_cmd.c: 222: if (*s == '\0')
      000264 4D               [ 1]  478 	tnz	a
      000265 26 0D            [ 1]  479 	jrne	00116$
                                    480 ;	./../../mib/stm8s_mib_debug_cmd.c: 224: argv[args] = 0;
      000267 1E 01            [ 2]  481 	ldw	x, (0x01, sp)
      000269 58               [ 2]  482 	sllw	x
      00026A 72 FB 0B         [ 2]  483 	addw	x, (0x0b, sp)
      00026D 6F 01            [ 1]  484 	clr	(0x1, x)
      00026F 7F               [ 1]  485 	clr	(x)
                                    486 ;	./../../mib/stm8s_mib_debug_cmd.c: 225: return args;
      000270 1E 01            [ 2]  487 	ldw	x, (0x01, sp)
      000272 20 0B            [ 2]  488 	jra	00120$
      000274                        489 00116$:
                                    490 ;	./../../mib/stm8s_mib_debug_cmd.c: 227: *s++ = '\0';
      000274 1E 05            [ 2]  491 	ldw	x, (0x05, sp)
      000276 7F               [ 1]  492 	clr	(x)
      000277 16 03            [ 2]  493 	ldw	y, (0x03, sp)
      000279 17 05            [ 2]  494 	ldw	(0x05, sp), y
      00027B 20 92            [ 2]  495 	jra	00117$
      00027D                        496 00119$:
                                    497 ;	./../../mib/stm8s_mib_debug_cmd.c: 229: return args;
      00027D 1E 01            [ 2]  498 	ldw	x, (0x01, sp)
      00027F                        499 00120$:
                                    500 ;	./../../mib/stm8s_mib_debug_cmd.c: 230: } // GetArgs.
      00027F 5B 08            [ 2]  501 	addw	sp, #8
      000281 90 85            [ 2]  502 	popw	y
      000283 5B 02            [ 2]  503 	addw	sp, #2
      000285 90 FC            [ 2]  504 	jp	(y)
                                    505 ;	./../../mib/stm8s_mib_debug_cmd.c: 241: int HexToInt(char *s, void *retval, uint16_t type)
                                    506 ;	-----------------------------------------
                                    507 ;	 function HexToInt
                                    508 ;	-----------------------------------------
      000287                        509 _HexToInt:
      000287 52 0E            [ 2]  510 	sub	sp, #14
                                    511 ;	./../../mib/stm8s_mib_debug_cmd.c: 247: if (!s || !retval)
      000289 1F 0A            [ 2]  512 	ldw	(0x0a, sp), x
      00028B 27 04            [ 1]  513 	jreq	00101$
      00028D 1E 11            [ 2]  514 	ldw	x, (0x11, sp)
      00028F 26 04            [ 1]  515 	jrne	00102$
      000291                        516 00101$:
                                    517 ;	./../../mib/stm8s_mib_debug_cmd.c: 248: return FALSE;
      000291 5F               [ 1]  518 	clrw	x
      000292 CCr03r6D         [ 2]  519 	jp	00132$
      000295                        520 00102$:
                                    521 ;	./../../mib/stm8s_mib_debug_cmd.c: 249: if (!strncmp(s, "0x", 2))
      000295 4B 02            [ 1]  522 	push	#0x02
      000297 4B 00            [ 1]  523 	push	#0x00
      000299 4Br07            [ 1]  524 	push	#<(___str_2+0)
      00029B 4Bs00            [ 1]  525 	push	#((___str_2+0) >> 8)
      00029D 1E 0E            [ 2]  526 	ldw	x, (0x0e, sp)
      00029F CDr00r00         [ 4]  527 	call	_strncmp
      0002A2 5D               [ 2]  528 	tnzw	x
      0002A3 26 06            [ 1]  529 	jrne	00105$
                                    530 ;	./../../mib/stm8s_mib_debug_cmd.c: 250: s += 2;
      0002A5 1E 0A            [ 2]  531 	ldw	x, (0x0a, sp)
      0002A7 5C               [ 1]  532 	incw	x
      0002A8 5C               [ 1]  533 	incw	x
      0002A9 1F 0A            [ 2]  534 	ldw	(0x0a, sp), x
      0002AB                        535 00105$:
                                    536 ;	./../../mib/stm8s_mib_debug_cmd.c: 252: for (i = 0, rval = 0; i < type / 4; i++)
      0002AB 0F 01            [ 1]  537 	clr	(0x01, sp)
      0002AD 5F               [ 1]  538 	clrw	x
      0002AE 1F 04            [ 2]  539 	ldw	(0x04, sp), x
      0002B0 1F 02            [ 2]  540 	ldw	(0x02, sp), x
      0002B2 16 0A            [ 2]  541 	ldw	y, (0x0a, sp)
      0002B4 17 0C            [ 2]  542 	ldw	(0x0c, sp), y
      0002B6 0F 0E            [ 1]  543 	clr	(0x0e, sp)
      0002B8                        544 00130$:
      0002B8 16 13            [ 2]  545 	ldw	y, (0x13, sp)
      0002BA 17 06            [ 2]  546 	ldw	(0x06, sp), y
      0002BC 93               [ 1]  547 	ldw	x, y
      0002BD 54               [ 2]  548 	srlw	x
      0002BE 54               [ 2]  549 	srlw	x
      0002BF 1F 08            [ 2]  550 	ldw	(0x08, sp), x
      0002C1 7B 0E            [ 1]  551 	ld	a, (0x0e, sp)
      0002C3 5F               [ 1]  552 	clrw	x
      0002C4 97               [ 1]  553 	ld	xl, a
      0002C5 13 08            [ 2]  554 	cpw	x, (0x08, sp)
      0002C7 24 70            [ 1]  555 	jrnc	00123$
                                    556 ;	./../../mib/stm8s_mib_debug_cmd.c: 254: if (*s == '\0')
      0002C9 1E 0C            [ 2]  557 	ldw	x, (0x0c, sp)
      0002CB F6               [ 1]  558 	ld	a, (x)
      0002CC 26 08            [ 1]  559 	jrne	00110$
                                    560 ;	./../../mib/stm8s_mib_debug_cmd.c: 256: if (i == 0)
      0002CE 0D 01            [ 1]  561 	tnz	(0x01, sp)
      0002D0 26 67            [ 1]  562 	jrne	00123$
                                    563 ;	./../../mib/stm8s_mib_debug_cmd.c: 257: return FALSE;
      0002D2 5F               [ 1]  564 	clrw	x
      0002D3 CCr03r6D         [ 2]  565 	jp	00132$
                                    566 ;	./../../mib/stm8s_mib_debug_cmd.c: 259: break;
      0002D6                        567 00110$:
                                    568 ;	./../../mib/stm8s_mib_debug_cmd.c: 261: c = *s++;
      0002D6 1E 0C            [ 2]  569 	ldw	x, (0x0c, sp)
      0002D8 5C               [ 1]  570 	incw	x
      0002D9 1F 0C            [ 2]  571 	ldw	(0x0c, sp), x
                                    572 ;	./../../mib/stm8s_mib_debug_cmd.c: 264: c -= '0';
      0002DB 97               [ 1]  573 	ld	xl, a
                                    574 ;	./../../mib/stm8s_mib_debug_cmd.c: 263: if (c >= '0' && c <= '9')
      0002DC A1 30            [ 1]  575 	cp	a, #0x30
      0002DE 25 09            [ 1]  576 	jrc	00120$
      0002E0 A1 39            [ 1]  577 	cp	a, #0x39
      0002E2 22 05            [ 1]  578 	jrugt	00120$
                                    579 ;	./../../mib/stm8s_mib_debug_cmd.c: 264: c -= '0';
      0002E4 9F               [ 1]  580 	ld	a, xl
      0002E5 A0 30            [ 1]  581 	sub	a, #0x30
      0002E7 20 1D            [ 2]  582 	jra	00121$
      0002E9                        583 00120$:
                                    584 ;	./../../mib/stm8s_mib_debug_cmd.c: 265: else if (c >= 'a' && c <= 'f')
      0002E9 A1 61            [ 1]  585 	cp	a, #0x61
      0002EB 25 09            [ 1]  586 	jrc	00116$
      0002ED A1 66            [ 1]  587 	cp	a, #0x66
      0002EF 22 05            [ 1]  588 	jrugt	00116$
                                    589 ;	./../../mib/stm8s_mib_debug_cmd.c: 266: c = c - 'a' + 10;
      0002F1 9F               [ 1]  590 	ld	a, xl
      0002F2 AB A9            [ 1]  591 	add	a, #0xa9
      0002F4 20 10            [ 2]  592 	jra	00121$
      0002F6                        593 00116$:
                                    594 ;	./../../mib/stm8s_mib_debug_cmd.c: 267: else if (c >= 'A' && c <= 'F')
      0002F6 A1 41            [ 1]  595 	cp	a, #0x41
      0002F8 25 09            [ 1]  596 	jrc	00112$
      0002FA A1 46            [ 1]  597 	cp	a, #0x46
      0002FC 22 05            [ 1]  598 	jrugt	00112$
                                    599 ;	./../../mib/stm8s_mib_debug_cmd.c: 268: c = c - 'A' + 10;
      0002FE 9F               [ 1]  600 	ld	a, xl
      0002FF AB C9            [ 1]  601 	add	a, #0xc9
      000301 20 03            [ 2]  602 	jra	00121$
      000303                        603 00112$:
                                    604 ;	./../../mib/stm8s_mib_debug_cmd.c: 270: return FALSE;
      000303 5F               [ 1]  605 	clrw	x
      000304 20 67            [ 2]  606 	jra	00132$
      000306                        607 00121$:
                                    608 ;	./../../mib/stm8s_mib_debug_cmd.c: 272: rval = rval << 4 | c;
      000306 88               [ 1]  609 	push	a
      000307 1E 05            [ 2]  610 	ldw	x, (0x05, sp)
      000309 16 03            [ 2]  611 	ldw	y, (0x03, sp)
      00030B A6 04            [ 1]  612 	ld	a, #0x04
      00030D                        613 00222$:
      00030D 58               [ 2]  614 	sllw	x
      00030E 90 59            [ 2]  615 	rlcw	y
      000310 4A               [ 1]  616 	dec	a
      000311 26 FA            [ 1]  617 	jrne	00222$
      000313 84               [ 1]  618 	pop	a
      000314 0F 08            [ 1]  619 	clr	(0x08, sp)
      000316 0F 07            [ 1]  620 	clr	(0x07, sp)
      000318 0F 06            [ 1]  621 	clr	(0x06, sp)
      00031A 89               [ 2]  622 	pushw	x
      00031B 1A 02            [ 1]  623 	or	a, (2, sp)
      00031D 85               [ 2]  624 	popw	x
      00031E 02               [ 1]  625 	rlwa	x
      00031F 1A 08            [ 1]  626 	or	a, (0x08, sp)
      000321 95               [ 1]  627 	ld	xh, a
      000322 90 9F            [ 1]  628 	ld	a, yl
      000324 1A 07            [ 1]  629 	or	a, (0x07, sp)
      000326 90 02            [ 1]  630 	rlwa	y
      000328 1A 06            [ 1]  631 	or	a, (0x06, sp)
      00032A 90 95            [ 1]  632 	ld	yh, a
      00032C 1F 04            [ 2]  633 	ldw	(0x04, sp), x
      00032E 17 02            [ 2]  634 	ldw	(0x02, sp), y
                                    635 ;	./../../mib/stm8s_mib_debug_cmd.c: 252: for (i = 0, rval = 0; i < type / 4; i++)
      000330 0C 0E            [ 1]  636 	inc	(0x0e, sp)
      000332 7B 0E            [ 1]  637 	ld	a, (0x0e, sp)
      000334 6B 01            [ 1]  638 	ld	(0x01, sp), a
      000336 CCr02rB8         [ 2]  639 	jp	00130$
      000339                        640 00123$:
                                    641 ;	./../../mib/stm8s_mib_debug_cmd.c: 275: switch (type)
      000339 1E 06            [ 2]  642 	ldw	x, (0x06, sp)
      00033B A3 00 08         [ 2]  643 	cpw	x, #0x0008
      00033E 27 10            [ 1]  644 	jreq	00124$
      000340 1E 06            [ 2]  645 	ldw	x, (0x06, sp)
      000342 A3 00 10         [ 2]  646 	cpw	x, #0x0010
      000345 27 10            [ 1]  647 	jreq	00125$
      000347 1E 06            [ 2]  648 	ldw	x, (0x06, sp)
      000349 A3 00 20         [ 2]  649 	cpw	x, #0x0020
      00034C 27 10            [ 1]  650 	jreq	00126$
      00034E 20 19            [ 2]  651 	jra	00127$
                                    652 ;	./../../mib/stm8s_mib_debug_cmd.c: 277: case 8:
      000350                        653 00124$:
                                    654 ;	./../../mib/stm8s_mib_debug_cmd.c: 278: *(uint8_t *)retval = (uint8_t)rval;
      000350 1E 11            [ 2]  655 	ldw	x, (0x11, sp)
      000352 7B 05            [ 1]  656 	ld	a, (0x05, sp)
      000354 F7               [ 1]  657 	ld	(x), a
                                    658 ;	./../../mib/stm8s_mib_debug_cmd.c: 279: break;
      000355 20 14            [ 2]  659 	jra	00128$
                                    660 ;	./../../mib/stm8s_mib_debug_cmd.c: 280: case 16:
      000357                        661 00125$:
                                    662 ;	./../../mib/stm8s_mib_debug_cmd.c: 281: *(uint16_t *)retval = (uint16_t)rval;
      000357 1E 11            [ 2]  663 	ldw	x, (0x11, sp)
      000359 16 04            [ 2]  664 	ldw	y, (0x04, sp)
      00035B FF               [ 2]  665 	ldw	(x), y
                                    666 ;	./../../mib/stm8s_mib_debug_cmd.c: 282: break;
      00035C 20 0D            [ 2]  667 	jra	00128$
                                    668 ;	./../../mib/stm8s_mib_debug_cmd.c: 283: case 32:
      00035E                        669 00126$:
                                    670 ;	./../../mib/stm8s_mib_debug_cmd.c: 284: *(uint32_t *)retval = (uint32_t)rval;
      00035E 1E 11            [ 2]  671 	ldw	x, (0x11, sp)
      000360 16 04            [ 2]  672 	ldw	y, (0x04, sp)
      000362 EF 02            [ 2]  673 	ldw	(0x2, x), y
      000364 16 02            [ 2]  674 	ldw	y, (0x02, sp)
      000366 FF               [ 2]  675 	ldw	(x), y
                                    676 ;	./../../mib/stm8s_mib_debug_cmd.c: 285: break;
      000367 20 02            [ 2]  677 	jra	00128$
                                    678 ;	./../../mib/stm8s_mib_debug_cmd.c: 286: default:
      000369                        679 00127$:
                                    680 ;	./../../mib/stm8s_mib_debug_cmd.c: 287: return FALSE;
      000369 5F               [ 1]  681 	clrw	x
                                    682 ;	./../../mib/stm8s_mib_debug_cmd.c: 288: }
                                    683 ;	./../../mib/stm8s_mib_debug_cmd.c: 289: return TRUE;
      00036A C5                     684 	.byte 0xc5
      00036B                        685 00128$:
      00036B 5F               [ 1]  686 	clrw	x
      00036C 5C               [ 1]  687 	incw	x
      00036D                        688 00132$:
                                    689 ;	./../../mib/stm8s_mib_debug_cmd.c: 290: } // HexToInt.
      00036D 16 0F            [ 2]  690 	ldw	y, (15, sp)
      00036F 5B 14            [ 2]  691 	addw	sp, #20
      000371 90 FC            [ 2]  692 	jp	(y)
                                    693 ;	./../../mib/stm8s_mib_debug_cmd.c: 300: int DecToLong(char *s, void *retval, uint16_t type)
                                    694 ;	-----------------------------------------
                                    695 ;	 function DecToLong
                                    696 ;	-----------------------------------------
      000373                        697 _DecToLong:
      000373 52 0E            [ 2]  698 	sub	sp, #14
                                    699 ;	./../../mib/stm8s_mib_debug_cmd.c: 305: if (!s || !s[0] || !retval)
      000375 5D               [ 2]  700 	tnzw	x
      000376 27 07            [ 1]  701 	jreq	00101$
      000378 F6               [ 1]  702 	ld	a, (x)
      000379 27 04            [ 1]  703 	jreq	00101$
      00037B 16 11            [ 2]  704 	ldw	y, (0x11, sp)
      00037D 26 03            [ 1]  705 	jrne	00102$
      00037F                        706 00101$:
                                    707 ;	./../../mib/stm8s_mib_debug_cmd.c: 306: return FALSE;
      00037F 5F               [ 1]  708 	clrw	x
      000380 20 73            [ 2]  709 	jra	00117$
      000382                        710 00102$:
                                    711 ;	./../../mib/stm8s_mib_debug_cmd.c: 308: for (rval= 0; *s; s++)
      000382 90 5F            [ 1]  712 	clrw	y
      000384 17 09            [ 2]  713 	ldw	(0x09, sp), y
      000386 1F 0D            [ 2]  714 	ldw	(0x0d, sp), x
      000388                        715 00115$:
      000388 1E 0D            [ 2]  716 	ldw	x, (0x0d, sp)
      00038A F6               [ 1]  717 	ld	a, (x)
      00038B 27 3C            [ 1]  718 	jreq	00108$
                                    719 ;	./../../mib/stm8s_mib_debug_cmd.c: 310: if (*s < '0' || *s > '9')
      00038D A1 30            [ 1]  720 	cp	a, #0x30
      00038F 25 04            [ 1]  721 	jrc	00105$
      000391 A1 39            [ 1]  722 	cp	a, #0x39
      000393 23 03            [ 2]  723 	jrule	00106$
      000395                        724 00105$:
                                    725 ;	./../../mib/stm8s_mib_debug_cmd.c: 311: return FALSE;
      000395 5F               [ 1]  726 	clrw	x
      000396 20 5D            [ 2]  727 	jra	00117$
      000398                        728 00106$:
                                    729 ;	./../../mib/stm8s_mib_debug_cmd.c: 312: c = *s - '0';
      000398 A0 30            [ 1]  730 	sub	a, #0x30
                                    731 ;	./../../mib/stm8s_mib_debug_cmd.c: 313: rval = rval * 10 + c;
      00039A 88               [ 1]  732 	push	a
      00039B 90 89            [ 2]  733 	pushw	y
      00039D 1E 0C            [ 2]  734 	ldw	x, (0x0c, sp)
      00039F 89               [ 2]  735 	pushw	x
      0003A0 4B 0A            [ 1]  736 	push	#0x0a
      0003A2 5F               [ 1]  737 	clrw	x
      0003A3 89               [ 2]  738 	pushw	x
      0003A4 4B 00            [ 1]  739 	push	#0x00
      0003A6 CDr00r00         [ 4]  740 	call	__mullong
      0003A9 5B 08            [ 2]  741 	addw	sp, #8
      0003AB 1F 04            [ 2]  742 	ldw	(0x04, sp), x
      0003AD 84               [ 1]  743 	pop	a
      0003AE 5F               [ 1]  744 	clrw	x
      0003AF 1F 05            [ 2]  745 	ldw	(0x05, sp), x
      0003B1 97               [ 1]  746 	ld	xl, a
      0003B2 72 FB 03         [ 2]  747 	addw	x, (0x03, sp)
      0003B5 90 9F            [ 1]  748 	ld	a, yl
      0003B7 19 06            [ 1]  749 	adc	a, (0x06, sp)
      0003B9 6B 0A            [ 1]  750 	ld	(0x0a, sp), a
      0003BB 90 9E            [ 1]  751 	ld	a, yh
      0003BD 19 05            [ 1]  752 	adc	a, (0x05, sp)
      0003BF 6B 09            [ 1]  753 	ld	(0x09, sp), a
      0003C1 51               [ 1]  754 	exgw	x, y
                                    755 ;	./../../mib/stm8s_mib_debug_cmd.c: 308: for (rval= 0; *s; s++)
      0003C2 1E 0D            [ 2]  756 	ldw	x, (0x0d, sp)
      0003C4 5C               [ 1]  757 	incw	x
      0003C5 1F 0D            [ 2]  758 	ldw	(0x0d, sp), x
      0003C7 20 BF            [ 2]  759 	jra	00115$
      0003C9                        760 00108$:
                                    761 ;	./../../mib/stm8s_mib_debug_cmd.c: 316: switch (type)
      0003C9 1E 13            [ 2]  762 	ldw	x, (0x13, sp)
      0003CB A3 00 08         [ 2]  763 	cpw	x, #0x0008
      0003CE 27 0C            [ 1]  764 	jreq	00109$
      0003D0 A3 00 10         [ 2]  765 	cpw	x, #0x0010
      0003D3 27 0E            [ 1]  766 	jreq	00110$
      0003D5 A3 00 20         [ 2]  767 	cpw	x, #0x0020
      0003D8 27 0E            [ 1]  768 	jreq	00111$
      0003DA 20 15            [ 2]  769 	jra	00112$
                                    770 ;	./../../mib/stm8s_mib_debug_cmd.c: 318: case 8:
      0003DC                        771 00109$:
                                    772 ;	./../../mib/stm8s_mib_debug_cmd.c: 319: *(uint8_t *)retval = (uint8_t)rval;
      0003DC 1E 11            [ 2]  773 	ldw	x, (0x11, sp)
      0003DE 90 9F            [ 1]  774 	ld	a, yl
      0003E0 F7               [ 1]  775 	ld	(x), a
                                    776 ;	./../../mib/stm8s_mib_debug_cmd.c: 320: break;
      0003E1 20 10            [ 2]  777 	jra	00113$
                                    778 ;	./../../mib/stm8s_mib_debug_cmd.c: 321: case 16:
      0003E3                        779 00110$:
                                    780 ;	./../../mib/stm8s_mib_debug_cmd.c: 322: *(uint16_t *)retval = (uint16_t)rval;
      0003E3 1E 11            [ 2]  781 	ldw	x, (0x11, sp)
      0003E5 FF               [ 2]  782 	ldw	(x), y
                                    783 ;	./../../mib/stm8s_mib_debug_cmd.c: 323: break;
      0003E6 20 0B            [ 2]  784 	jra	00113$
                                    785 ;	./../../mib/stm8s_mib_debug_cmd.c: 324: case 32:
      0003E8                        786 00111$:
                                    787 ;	./../../mib/stm8s_mib_debug_cmd.c: 325: *(uint32_t *)retval = (uint32_t)rval;
      0003E8 1E 11            [ 2]  788 	ldw	x, (0x11, sp)
      0003EA EF 02            [ 2]  789 	ldw	(0x2, x), y
      0003EC 16 09            [ 2]  790 	ldw	y, (0x09, sp)
      0003EE FF               [ 2]  791 	ldw	(x), y
                                    792 ;	./../../mib/stm8s_mib_debug_cmd.c: 326: break;
      0003EF 20 02            [ 2]  793 	jra	00113$
                                    794 ;	./../../mib/stm8s_mib_debug_cmd.c: 327: default:
      0003F1                        795 00112$:
                                    796 ;	./../../mib/stm8s_mib_debug_cmd.c: 328: return FALSE;
      0003F1 5F               [ 1]  797 	clrw	x
                                    798 ;	./../../mib/stm8s_mib_debug_cmd.c: 329: }
                                    799 ;	./../../mib/stm8s_mib_debug_cmd.c: 330: return TRUE;
      0003F2 C5                     800 	.byte 0xc5
      0003F3                        801 00113$:
      0003F3 5F               [ 1]  802 	clrw	x
      0003F4 5C               [ 1]  803 	incw	x
      0003F5                        804 00117$:
                                    805 ;	./../../mib/stm8s_mib_debug_cmd.c: 331: } // DecToLong.
      0003F5 16 0F            [ 2]  806 	ldw	y, (15, sp)
      0003F7 5B 14            [ 2]  807 	addw	sp, #20
      0003F9 90 FC            [ 2]  808 	jp	(y)
                                    809 ;	./../../mib/stm8s_mib_debug_cmd.c: 340: void HexDump(uint32_t addr, uint32_t len)
                                    810 ;	-----------------------------------------
                                    811 ;	 function HexDump
                                    812 ;	-----------------------------------------
      0003FB                        813 _HexDump:
      0003FB 52 27            [ 2]  814 	sub	sp, #39
                                    815 ;	./../../mib/stm8s_mib_debug_cmd.c: 343: uint32_t endPtr = (addr + len);
      0003FD 16 2C            [ 2]  816 	ldw	y, (0x2c, sp)
      0003FF 72 F9 30         [ 2]  817 	addw	y, (0x30, sp)
      000402 1E 2A            [ 2]  818 	ldw	x, (0x2a, sp)
      000404 24 01            [ 1]  819 	jrnc	00240$
      000406 5C               [ 1]  820 	incw	x
      000407                        821 00240$:
      000407 72 FB 2E         [ 2]  822 	addw	x, (0x2e, sp)
      00040A 17 17            [ 2]  823 	ldw	(0x17, sp), y
      00040C 1F 15            [ 2]  824 	ldw	(0x15, sp), x
                                    825 ;	./../../mib/stm8s_mib_debug_cmd.c: 344: int i, remainder = len & 0xf;
      00040E 1E 30            [ 2]  826 	ldw	x, (0x30, sp)
      000410 9F               [ 1]  827 	ld	a, xl
      000411 A4 0F            [ 1]  828 	and	a, #0x0f
      000413 6B 1A            [ 1]  829 	ld	(0x1a, sp), a
      000415 0F 19            [ 1]  830 	clr	(0x19, sp)
                                    831 ;	./../../mib/stm8s_mib_debug_cmd.c: 350: mib_printf("\r\n");
      000417 4Br00            [ 1]  832 	push	#<(___str_0+0)
      000419 4Bs00            [ 1]  833 	push	#((___str_0+0) >> 8)
      00041B CDr00r00         [ 4]  834 	call	_mib_printf
      00041E 5B 02            [ 2]  835 	addw	sp, #2
                                    836 ;	./../../mib/stm8s_mib_debug_cmd.c: 351: mib_printf("address     Hex Value                                        Ascii value\r\n");
      000420 4Br0A            [ 1]  837 	push	#<(___str_3+0)
      000422 4Bs00            [ 1]  838 	push	#((___str_3+0) >> 8)
      000424 CDr00r00         [ 4]  839 	call	_mib_printf
      000427 5B 02            [ 2]  840 	addw	sp, #2
                                    841 ;	./../../mib/stm8s_mib_debug_cmd.c: 354: p_address = (uint32_t)(addr);
      000429 1E 2C            [ 2]  842 	ldw	x, (0x2c, sp)
      00042B 16 2A            [ 2]  843 	ldw	y, (0x2a, sp)
                                    844 ;	./../../mib/stm8s_mib_debug_cmd.c: 355: p_data_ptr = (uint16_t *)p_data;
                                    845 ;	./../../mib/stm8s_mib_debug_cmd.c: 356: while ((p_address + 16) <= endPtr)
      00042D 1F 1D            [ 2]  846 	ldw	(0x1d, sp), x
      00042F 17 1B            [ 2]  847 	ldw	(0x1b, sp), y
      000431                        848 00107$:
      000431 1E 1D            [ 2]  849 	ldw	x, (0x1d, sp)
      000433 1C 00 10         [ 2]  850 	addw	x, #0x0010
      000436 1F 21            [ 2]  851 	ldw	(0x21, sp), x
      000438 7B 1C            [ 1]  852 	ld	a, (0x1c, sp)
      00043A A9 00            [ 1]  853 	adc	a, #0x00
      00043C 6B 20            [ 1]  854 	ld	(0x20, sp), a
      00043E 7B 1B            [ 1]  855 	ld	a, (0x1b, sp)
      000440 A9 00            [ 1]  856 	adc	a, #0x00
      000442 6B 1F            [ 1]  857 	ld	(0x1f, sp), a
      000444 1E 17            [ 2]  858 	ldw	x, (0x17, sp)
      000446 13 21            [ 2]  859 	cpw	x, (0x21, sp)
      000448 7B 16            [ 1]  860 	ld	a, (0x16, sp)
      00044A 12 20            [ 1]  861 	sbc	a, (0x20, sp)
      00044C 7B 15            [ 1]  862 	ld	a, (0x15, sp)
      00044E 12 1F            [ 1]  863 	sbc	a, (0x1f, sp)
      000450 24 03            [ 1]  864 	jrnc	00241$
      000452 CCr05r15         [ 2]  865 	jp	00163$
      000455                        866 00241$:
                                    867 ;	./../../mib/stm8s_mib_debug_cmd.c: 358: mib_printf("0x%08lx : ", p_address);
      000455 1E 1D            [ 2]  868 	ldw	x, (0x1d, sp)
      000457 89               [ 2]  869 	pushw	x
      000458 1E 1D            [ 2]  870 	ldw	x, (0x1d, sp)
      00045A 89               [ 2]  871 	pushw	x
      00045B 4Br55            [ 1]  872 	push	#<(___str_4+0)
      00045D 4Bs00            [ 1]  873 	push	#((___str_4+0) >> 8)
      00045F CDr00r00         [ 4]  874 	call	_mib_printf
      000462 5B 06            [ 2]  875 	addw	sp, #6
                                    876 ;	./../../mib/stm8s_mib_debug_cmd.c: 359: for (i = 0; i < 8; i++)
      000464 5F               [ 1]  877 	clrw	x
      000465 1F 26            [ 2]  878 	ldw	(0x26, sp), x
      000467                        879 00120$:
                                    880 ;	./../../mib/stm8s_mib_debug_cmd.c: 361: p_data_ptr[i] = rd_ADDR16(p_address + i * 2);
      000467 16 26            [ 2]  881 	ldw	y, (0x26, sp)
      000469 90 58            [ 2]  882 	sllw	y
      00046B 93               [ 1]  883 	ldw	x, y
      00046C 89               [ 2]  884 	pushw	x
      00046D 96               [ 1]  885 	ldw	x, sp
      00046E 1C 00 03         [ 2]  886 	addw	x, #3
      000471 72 FB 01         [ 2]  887 	addw	x, (1, sp)
      000474 5B 02            [ 2]  888 	addw	sp, #2
      000476 17 24            [ 2]  889 	ldw	(0x24, sp), y
      000478 16 1D            [ 2]  890 	ldw	y, (0x1d, sp)
      00047A 72 F9 24         [ 2]  891 	addw	y, (0x24, sp)
      00047D 90 FE            [ 2]  892 	ldw	y, (y)
      00047F FF               [ 2]  893 	ldw	(x), y
                                    894 ;	./../../mib/stm8s_mib_debug_cmd.c: 362: mib_printf("%02x ", p_data[i * 2]);
      000480 7B 27            [ 1]  895 	ld	a, (0x27, sp)
      000482 48               [ 1]  896 	sll	a
      000483 6B 23            [ 1]  897 	ld	(0x23, sp), a
      000485 6B 25            [ 1]  898 	ld	(0x25, sp), a
      000487 49               [ 1]  899 	rlc	a
      000488 4F               [ 1]  900 	clr	a
      000489 A2 00            [ 1]  901 	sbc	a, #0x00
      00048B 6B 24            [ 1]  902 	ld	(0x24, sp), a
      00048D 96               [ 1]  903 	ldw	x, sp
      00048E 5C               [ 1]  904 	incw	x
      00048F 72 FB 24         [ 2]  905 	addw	x, (0x24, sp)
      000492 F6               [ 1]  906 	ld	a, (x)
      000493 5F               [ 1]  907 	clrw	x
      000494 97               [ 1]  908 	ld	xl, a
      000495 89               [ 2]  909 	pushw	x
      000496 4Br60            [ 1]  910 	push	#<(___str_5+0)
      000498 4Bs00            [ 1]  911 	push	#((___str_5+0) >> 8)
      00049A CDr00r00         [ 4]  912 	call	_mib_printf
      00049D 5B 04            [ 2]  913 	addw	sp, #4
                                    914 ;	./../../mib/stm8s_mib_debug_cmd.c: 363: mib_printf("%02x ", p_data[i * 2 + 1]);
      00049F 7B 23            [ 1]  915 	ld	a, (0x23, sp)
      0004A1 4C               [ 1]  916 	inc	a
      0004A2 6B 25            [ 1]  917 	ld	(0x25, sp), a
      0004A4 49               [ 1]  918 	rlc	a
      0004A5 4F               [ 1]  919 	clr	a
      0004A6 A2 00            [ 1]  920 	sbc	a, #0x00
      0004A8 6B 24            [ 1]  921 	ld	(0x24, sp), a
      0004AA 96               [ 1]  922 	ldw	x, sp
      0004AB 5C               [ 1]  923 	incw	x
      0004AC 72 FB 24         [ 2]  924 	addw	x, (0x24, sp)
      0004AF F6               [ 1]  925 	ld	a, (x)
      0004B0 5F               [ 1]  926 	clrw	x
      0004B1 97               [ 1]  927 	ld	xl, a
      0004B2 89               [ 2]  928 	pushw	x
      0004B3 4Br60            [ 1]  929 	push	#<(___str_5+0)
      0004B5 4Bs00            [ 1]  930 	push	#((___str_5+0) >> 8)
      0004B7 CDr00r00         [ 4]  931 	call	_mib_printf
      0004BA 5B 04            [ 2]  932 	addw	sp, #4
                                    933 ;	./../../mib/stm8s_mib_debug_cmd.c: 359: for (i = 0; i < 8; i++)
      0004BC 1E 26            [ 2]  934 	ldw	x, (0x26, sp)
      0004BE 5C               [ 1]  935 	incw	x
      0004BF 1F 26            [ 2]  936 	ldw	(0x26, sp), x
      0004C1 A3 00 08         [ 2]  937 	cpw	x, #0x0008
      0004C4 2F A1            [ 1]  938 	jrslt	00120$
                                    939 ;	./../../mib/stm8s_mib_debug_cmd.c: 365: mib_printf(" ");
      0004C6 4Br66            [ 1]  940 	push	#<(___str_6+0)
      0004C8 4Bs00            [ 1]  941 	push	#((___str_6+0) >> 8)
      0004CA CDr00r00         [ 4]  942 	call	_mib_printf
      0004CD 5B 02            [ 2]  943 	addw	sp, #2
                                    944 ;	./../../mib/stm8s_mib_debug_cmd.c: 366: for (i = 0; i < 16; i++)
      0004CF 5F               [ 1]  945 	clrw	x
      0004D0 1F 26            [ 2]  946 	ldw	(0x26, sp), x
      0004D2                        947 00122$:
                                    948 ;	./../../mib/stm8s_mib_debug_cmd.c: 368: c = p_data[i];
      0004D2 96               [ 1]  949 	ldw	x, sp
      0004D3 5C               [ 1]  950 	incw	x
      0004D4 72 FB 26         [ 2]  951 	addw	x, (0x26, sp)
      0004D7 F6               [ 1]  952 	ld	a, (x)
                                    953 ;	./../../mib/stm8s_mib_debug_cmd.c: 369: if (c >= 32 && c <= 125)
      0004D8 A1 20            [ 1]  954 	cp	a, #0x20
      0004DA 25 12            [ 1]  955 	jrc	00103$
      0004DC A1 7D            [ 1]  956 	cp	a, #0x7d
      0004DE 22 0E            [ 1]  957 	jrugt	00103$
                                    958 ;	./../../mib/stm8s_mib_debug_cmd.c: 370: mib_printf("%c", c);
      0004E0 5F               [ 1]  959 	clrw	x
      0004E1 97               [ 1]  960 	ld	xl, a
      0004E2 89               [ 2]  961 	pushw	x
      0004E3 4Br68            [ 1]  962 	push	#<(___str_7+0)
      0004E5 4Bs00            [ 1]  963 	push	#((___str_7+0) >> 8)
      0004E7 CDr00r00         [ 4]  964 	call	_mib_printf
      0004EA 5B 04            [ 2]  965 	addw	sp, #4
      0004EC 20 09            [ 2]  966 	jra	00123$
      0004EE                        967 00103$:
                                    968 ;	./../../mib/stm8s_mib_debug_cmd.c: 372: mib_printf(".");
      0004EE 4Br6B            [ 1]  969 	push	#<(___str_8+0)
      0004F0 4Bs00            [ 1]  970 	push	#((___str_8+0) >> 8)
      0004F2 CDr00r00         [ 4]  971 	call	_mib_printf
      0004F5 5B 02            [ 2]  972 	addw	sp, #2
      0004F7                        973 00123$:
                                    974 ;	./../../mib/stm8s_mib_debug_cmd.c: 366: for (i = 0; i < 16; i++)
      0004F7 1E 26            [ 2]  975 	ldw	x, (0x26, sp)
      0004F9 5C               [ 1]  976 	incw	x
      0004FA 1F 26            [ 2]  977 	ldw	(0x26, sp), x
      0004FC A3 00 10         [ 2]  978 	cpw	x, #0x0010
      0004FF 2F D1            [ 1]  979 	jrslt	00122$
                                    980 ;	./../../mib/stm8s_mib_debug_cmd.c: 374: p_address += 16;
      000501 16 21            [ 2]  981 	ldw	y, (0x21, sp)
      000503 17 1D            [ 2]  982 	ldw	(0x1d, sp), y
      000505 16 1F            [ 2]  983 	ldw	y, (0x1f, sp)
      000507 17 1B            [ 2]  984 	ldw	(0x1b, sp), y
                                    985 ;	./../../mib/stm8s_mib_debug_cmd.c: 376: mib_printf("\r\n");
      000509 4Br00            [ 1]  986 	push	#<(___str_0+0)
      00050B 4Bs00            [ 1]  987 	push	#((___str_0+0) >> 8)
      00050D CDr00r00         [ 4]  988 	call	_mib_printf
      000510 5B 02            [ 2]  989 	addw	sp, #2
      000512 CCr04r31         [ 2]  990 	jp	00107$
      000515                        991 00163$:
      000515 16 1D            [ 2]  992 	ldw	y, (0x1d, sp)
      000517 17 24            [ 2]  993 	ldw	(0x24, sp), y
      000519 16 1B            [ 2]  994 	ldw	y, (0x1b, sp)
      00051B 17 22            [ 2]  995 	ldw	(0x22, sp), y
                                    996 ;	./../../mib/stm8s_mib_debug_cmd.c: 380: if (remainder)
      00051D 1E 19            [ 2]  997 	ldw	x, (0x19, sp)
      00051F 26 03            [ 1]  998 	jrne	00248$
      000521 CCr06r31         [ 2]  999 	jp	00119$
      000524                       1000 00248$:
                                   1001 ;	./../../mib/stm8s_mib_debug_cmd.c: 382: mib_printf("0x%08lx  ", p_address);
      000524 1E 1D            [ 2] 1002 	ldw	x, (0x1d, sp)
      000526 89               [ 2] 1003 	pushw	x
      000527 1E 1D            [ 2] 1004 	ldw	x, (0x1d, sp)
      000529 89               [ 2] 1005 	pushw	x
      00052A 4Br6D            [ 1] 1006 	push	#<(___str_9+0)
      00052C 4Bs00            [ 1] 1007 	push	#((___str_9+0) >> 8)
      00052E CDr00r00         [ 4] 1008 	call	_mib_printf
      000531 5B 06            [ 2] 1009 	addw	sp, #6
                                   1010 ;	./../../mib/stm8s_mib_debug_cmd.c: 383: for (i = 0; i < (remainder >> 1); i++)
      000533 1E 19            [ 2] 1011 	ldw	x, (0x19, sp)
      000535 57               [ 2] 1012 	sraw	x
      000536 1F 1D            [ 2] 1013 	ldw	(0x1d, sp), x
      000538 5F               [ 1] 1014 	clrw	x
      000539 1F 26            [ 2] 1015 	ldw	(0x26, sp), x
      00053B                       1016 00125$:
      00053B 1E 26            [ 2] 1017 	ldw	x, (0x26, sp)
      00053D 13 1D            [ 2] 1018 	cpw	x, (0x1d, sp)
      00053F 2E 5C            [ 1] 1019 	jrsge	00110$
                                   1020 ;	./../../mib/stm8s_mib_debug_cmd.c: 385: p_data_ptr[i] = rd_ADDR16(p_address + i * 2);
      000541 16 26            [ 2] 1021 	ldw	y, (0x26, sp)
      000543 90 58            [ 2] 1022 	sllw	y
      000545 93               [ 1] 1023 	ldw	x, y
      000546 89               [ 2] 1024 	pushw	x
      000547 96               [ 1] 1025 	ldw	x, sp
      000548 1C 00 03         [ 2] 1026 	addw	x, #3
      00054B 72 FB 01         [ 2] 1027 	addw	x, (1, sp)
      00054E 5B 02            [ 2] 1028 	addw	sp, #2
      000550 17 20            [ 2] 1029 	ldw	(0x20, sp), y
      000552 16 24            [ 2] 1030 	ldw	y, (0x24, sp)
      000554 72 F9 20         [ 2] 1031 	addw	y, (0x20, sp)
      000557 90 FE            [ 2] 1032 	ldw	y, (y)
      000559 FF               [ 2] 1033 	ldw	(x), y
                                   1034 ;	./../../mib/stm8s_mib_debug_cmd.c: 386: mib_printf("%02x ", p_data[i * 2]);
      00055A 7B 27            [ 1] 1035 	ld	a, (0x27, sp)
      00055C 48               [ 1] 1036 	sll	a
      00055D 6B 1F            [ 1] 1037 	ld	(0x1f, sp), a
      00055F 6B 21            [ 1] 1038 	ld	(0x21, sp), a
      000561 49               [ 1] 1039 	rlc	a
      000562 4F               [ 1] 1040 	clr	a
      000563 A2 00            [ 1] 1041 	sbc	a, #0x00
      000565 6B 20            [ 1] 1042 	ld	(0x20, sp), a
      000567 96               [ 1] 1043 	ldw	x, sp
      000568 5C               [ 1] 1044 	incw	x
      000569 72 FB 20         [ 2] 1045 	addw	x, (0x20, sp)
      00056C F6               [ 1] 1046 	ld	a, (x)
      00056D 5F               [ 1] 1047 	clrw	x
      00056E 97               [ 1] 1048 	ld	xl, a
      00056F 89               [ 2] 1049 	pushw	x
      000570 4Br60            [ 1] 1050 	push	#<(___str_5+0)
      000572 4Bs00            [ 1] 1051 	push	#((___str_5+0) >> 8)
      000574 CDr00r00         [ 4] 1052 	call	_mib_printf
      000577 5B 04            [ 2] 1053 	addw	sp, #4
                                   1054 ;	./../../mib/stm8s_mib_debug_cmd.c: 387: mib_printf("%02x ", p_data[i * 2 + 1]);
      000579 7B 1F            [ 1] 1055 	ld	a, (0x1f, sp)
      00057B 4C               [ 1] 1056 	inc	a
      00057C 6B 21            [ 1] 1057 	ld	(0x21, sp), a
      00057E 49               [ 1] 1058 	rlc	a
      00057F 4F               [ 1] 1059 	clr	a
      000580 A2 00            [ 1] 1060 	sbc	a, #0x00
      000582 6B 20            [ 1] 1061 	ld	(0x20, sp), a
      000584 96               [ 1] 1062 	ldw	x, sp
      000585 5C               [ 1] 1063 	incw	x
      000586 72 FB 20         [ 2] 1064 	addw	x, (0x20, sp)
      000589 F6               [ 1] 1065 	ld	a, (x)
      00058A 5F               [ 1] 1066 	clrw	x
      00058B 97               [ 1] 1067 	ld	xl, a
      00058C 89               [ 2] 1068 	pushw	x
      00058D 4Br60            [ 1] 1069 	push	#<(___str_5+0)
      00058F 4Bs00            [ 1] 1070 	push	#((___str_5+0) >> 8)
      000591 CDr00r00         [ 4] 1071 	call	_mib_printf
      000594 5B 04            [ 2] 1072 	addw	sp, #4
                                   1073 ;	./../../mib/stm8s_mib_debug_cmd.c: 383: for (i = 0; i < (remainder >> 1); i++)
      000596 1E 26            [ 2] 1074 	ldw	x, (0x26, sp)
      000598 5C               [ 1] 1075 	incw	x
      000599 1F 26            [ 2] 1076 	ldw	(0x26, sp), x
      00059B 20 9E            [ 2] 1077 	jra	00125$
      00059D                       1078 00110$:
                                   1079 ;	./../../mib/stm8s_mib_debug_cmd.c: 389: for (i = 0; i < (16 - (remainder >> 1) * 2); i++)
      00059D 1E 1D            [ 2] 1080 	ldw	x, (0x1d, sp)
      00059F 58               [ 2] 1081 	sllw	x
      0005A0 1F 26            [ 2] 1082 	ldw	(0x26, sp), x
      0005A2 A6 10            [ 1] 1083 	ld	a, #0x10
      0005A4 10 27            [ 1] 1084 	sub	a, (0x27, sp)
      0005A6 6B 25            [ 1] 1085 	ld	(0x25, sp), a
      0005A8 4F               [ 1] 1086 	clr	a
      0005A9 12 26            [ 1] 1087 	sbc	a, (0x26, sp)
      0005AB 6B 24            [ 1] 1088 	ld	(0x24, sp), a
      0005AD 5F               [ 1] 1089 	clrw	x
      0005AE 1F 26            [ 2] 1090 	ldw	(0x26, sp), x
      0005B0                       1091 00128$:
      0005B0 1E 26            [ 2] 1092 	ldw	x, (0x26, sp)
      0005B2 13 24            [ 2] 1093 	cpw	x, (0x24, sp)
      0005B4 2E 10            [ 1] 1094 	jrsge	00111$
                                   1095 ;	./../../mib/stm8s_mib_debug_cmd.c: 391: mib_printf("   ");
      0005B6 4Br77            [ 1] 1096 	push	#<(___str_10+0)
      0005B8 4Bs00            [ 1] 1097 	push	#((___str_10+0) >> 8)
      0005BA CDr00r00         [ 4] 1098 	call	_mib_printf
      0005BD 5B 02            [ 2] 1099 	addw	sp, #2
                                   1100 ;	./../../mib/stm8s_mib_debug_cmd.c: 389: for (i = 0; i < (16 - (remainder >> 1) * 2); i++)
      0005BF 1E 26            [ 2] 1101 	ldw	x, (0x26, sp)
      0005C1 5C               [ 1] 1102 	incw	x
      0005C2 1F 26            [ 2] 1103 	ldw	(0x26, sp), x
      0005C4 20 EA            [ 2] 1104 	jra	00128$
      0005C6                       1105 00111$:
                                   1106 ;	./../../mib/stm8s_mib_debug_cmd.c: 393: mib_printf(" ");
      0005C6 4Br66            [ 1] 1107 	push	#<(___str_6+0)
      0005C8 4Bs00            [ 1] 1108 	push	#((___str_6+0) >> 8)
      0005CA CDr00r00         [ 4] 1109 	call	_mib_printf
      0005CD 5B 02            [ 2] 1110 	addw	sp, #2
                                   1111 ;	./../../mib/stm8s_mib_debug_cmd.c: 394: for (i = 0; i < remainder; i++)
      0005CF 5F               [ 1] 1112 	clrw	x
      0005D0 1F 26            [ 2] 1113 	ldw	(0x26, sp), x
      0005D2                       1114 00131$:
      0005D2 1E 26            [ 2] 1115 	ldw	x, (0x26, sp)
      0005D4 13 19            [ 2] 1116 	cpw	x, (0x19, sp)
      0005D6 2E 2C            [ 1] 1117 	jrsge	00116$
                                   1118 ;	./../../mib/stm8s_mib_debug_cmd.c: 396: c = p_data[i];
      0005D8 96               [ 1] 1119 	ldw	x, sp
      0005D9 5C               [ 1] 1120 	incw	x
      0005DA 72 FB 26         [ 2] 1121 	addw	x, (0x26, sp)
      0005DD F6               [ 1] 1122 	ld	a, (x)
                                   1123 ;	./../../mib/stm8s_mib_debug_cmd.c: 397: if (c >= 32 && c <= 125)
      0005DE A1 20            [ 1] 1124 	cp	a, #0x20
      0005E0 25 12            [ 1] 1125 	jrc	00113$
      0005E2 A1 7D            [ 1] 1126 	cp	a, #0x7d
      0005E4 22 0E            [ 1] 1127 	jrugt	00113$
                                   1128 ;	./../../mib/stm8s_mib_debug_cmd.c: 398: mib_printf("%c", c);
      0005E6 5F               [ 1] 1129 	clrw	x
      0005E7 97               [ 1] 1130 	ld	xl, a
      0005E8 89               [ 2] 1131 	pushw	x
      0005E9 4Br68            [ 1] 1132 	push	#<(___str_7+0)
      0005EB 4Bs00            [ 1] 1133 	push	#((___str_7+0) >> 8)
      0005ED CDr00r00         [ 4] 1134 	call	_mib_printf
      0005F0 5B 04            [ 2] 1135 	addw	sp, #4
      0005F2 20 09            [ 2] 1136 	jra	00132$
      0005F4                       1137 00113$:
                                   1138 ;	./../../mib/stm8s_mib_debug_cmd.c: 400: mib_printf(".");
      0005F4 4Br6B            [ 1] 1139 	push	#<(___str_8+0)
      0005F6 4Bs00            [ 1] 1140 	push	#((___str_8+0) >> 8)
      0005F8 CDr00r00         [ 4] 1141 	call	_mib_printf
      0005FB 5B 02            [ 2] 1142 	addw	sp, #2
      0005FD                       1143 00132$:
                                   1144 ;	./../../mib/stm8s_mib_debug_cmd.c: 394: for (i = 0; i < remainder; i++)
      0005FD 1E 26            [ 2] 1145 	ldw	x, (0x26, sp)
      0005FF 5C               [ 1] 1146 	incw	x
      000600 1F 26            [ 2] 1147 	ldw	(0x26, sp), x
      000602 20 CE            [ 2] 1148 	jra	00131$
      000604                       1149 00116$:
                                   1150 ;	./../../mib/stm8s_mib_debug_cmd.c: 402: for (i = 0; i < (16 - remainder); i++)
      000604 A6 10            [ 1] 1151 	ld	a, #0x10
      000606 10 1A            [ 1] 1152 	sub	a, (0x1a, sp)
      000608 6B 25            [ 1] 1153 	ld	(0x25, sp), a
      00060A 4F               [ 1] 1154 	clr	a
      00060B 12 19            [ 1] 1155 	sbc	a, (0x19, sp)
      00060D 6B 24            [ 1] 1156 	ld	(0x24, sp), a
      00060F 5F               [ 1] 1157 	clrw	x
      000610 1F 26            [ 2] 1158 	ldw	(0x26, sp), x
      000612                       1159 00134$:
      000612 1E 26            [ 2] 1160 	ldw	x, (0x26, sp)
      000614 13 24            [ 2] 1161 	cpw	x, (0x24, sp)
      000616 2E 10            [ 1] 1162 	jrsge	00117$
                                   1163 ;	./../../mib/stm8s_mib_debug_cmd.c: 404: mib_printf(" ");
      000618 4Br66            [ 1] 1164 	push	#<(___str_6+0)
      00061A 4Bs00            [ 1] 1165 	push	#((___str_6+0) >> 8)
      00061C CDr00r00         [ 4] 1166 	call	_mib_printf
      00061F 5B 02            [ 2] 1167 	addw	sp, #2
                                   1168 ;	./../../mib/stm8s_mib_debug_cmd.c: 402: for (i = 0; i < (16 - remainder); i++)
      000621 1E 26            [ 2] 1169 	ldw	x, (0x26, sp)
      000623 5C               [ 1] 1170 	incw	x
      000624 1F 26            [ 2] 1171 	ldw	(0x26, sp), x
      000626 20 EA            [ 2] 1172 	jra	00134$
      000628                       1173 00117$:
                                   1174 ;	./../../mib/stm8s_mib_debug_cmd.c: 407: mib_printf("\r\n");
      000628 4Br00            [ 1] 1175 	push	#<(___str_0+0)
      00062A 4Bs00            [ 1] 1176 	push	#((___str_0+0) >> 8)
      00062C CDr00r00         [ 4] 1177 	call	_mib_printf
      00062F 5B 02            [ 2] 1178 	addw	sp, #2
      000631                       1179 00119$:
                                   1180 ;	./../../mib/stm8s_mib_debug_cmd.c: 409: return;
                                   1181 ;	./../../mib/stm8s_mib_debug_cmd.c: 410: } // HexDump.
      000631 1E 28            [ 2] 1182 	ldw	x, (40, sp)
      000633 5B 31            [ 2] 1183 	addw	sp, #49
      000635 FC               [ 2] 1184 	jp	(x)
                                   1185 ;	./../../mib/stm8s_mib_debug_cmd.c: 419: int DoPrintHelp(int argc, char **argv)
                                   1186 ;	-----------------------------------------
                                   1187 ;	 function DoPrintHelp
                                   1188 ;	-----------------------------------------
      000636                       1189 _DoPrintHelp:
      000636 52 02            [ 2] 1190 	sub	sp, #2
                                   1191 ;	./../../mib/stm8s_mib_debug_cmd.c: 423: if (argc == 1)
      000638 5A               [ 2] 1192 	decw	x
      000639 26 39            [ 1] 1193 	jrne	00105$
                                   1194 ;	./../../mib/stm8s_mib_debug_cmd.c: 425: mib_printf("*******\r\n");
      00063B 4Br7B            [ 1] 1195 	push	#<(___str_11+0)
      00063D 4Bs00            [ 1] 1196 	push	#((___str_11+0) >> 8)
      00063F CDr00r00         [ 4] 1197 	call	_mib_printf
      000642 5B 02            [ 2] 1198 	addw	sp, #2
                                   1199 ;	./../../mib/stm8s_mib_debug_cmd.c: 426: mib_printf("  help  Help for commands.\r\n");
      000644 4Br85            [ 1] 1200 	push	#<(___str_12+0)
      000646 4Bs00            [ 1] 1201 	push	#((___str_12+0) >> 8)
      000648 CDr00r00         [ 4] 1202 	call	_mib_printf
      00064B 5B 02            [ 2] 1203 	addw	sp, #2
                                   1204 ;	./../../mib/stm8s_mib_debug_cmd.c: 428: for (cptr = cmdTbl; cptr->cmd; cptr++)
      00064D AEr00r00         [ 2] 1205 	ldw	x, #(_cmdTbl+0)
      000650 1F 01            [ 2] 1206 	ldw	(0x01, sp), x
      000652                       1207 00108$:
      000652 1E 01            [ 2] 1208 	ldw	x, (0x01, sp)
      000654 FE               [ 2] 1209 	ldw	x, (x)
      000655 27 12            [ 1] 1210 	jreq	00103$
                                   1211 ;	./../../mib/stm8s_mib_debug_cmd.c: 430: if (cptr->usage)
      000657 1E 01            [ 2] 1212 	ldw	x, (0x01, sp)
      000659 EE 04            [ 2] 1213 	ldw	x, (0x4, x)
      00065B 27 03            [ 1] 1214 	jreq	00109$
                                   1215 ;	./../../mib/stm8s_mib_debug_cmd.c: 431: MibWriteDebugString(cptr->usage);
      00065D CDr00r00         [ 4] 1216 	call	_MibWriteDebugString
      000660                       1217 00109$:
                                   1218 ;	./../../mib/stm8s_mib_debug_cmd.c: 428: for (cptr = cmdTbl; cptr->cmd; cptr++)
      000660 1E 01            [ 2] 1219 	ldw	x, (0x01, sp)
      000662 1C 00 06         [ 2] 1220 	addw	x, #0x0006
      000665 1F 01            [ 2] 1221 	ldw	(0x01, sp), x
      000667 20 E9            [ 2] 1222 	jra	00108$
      000669                       1223 00103$:
                                   1224 ;	./../../mib/stm8s_mib_debug_cmd.c: 433: mib_printf("*******\r\n");
      000669 4Br7B            [ 1] 1225 	push	#<(___str_11+0)
      00066B 4Bs00            [ 1] 1226 	push	#((___str_11+0) >> 8)
      00066D CDr00r00         [ 4] 1227 	call	_mib_printf
      000670 5B 02            [ 2] 1228 	addw	sp, #2
      000672 20 1F            [ 2] 1229 	jra	00106$
      000674                       1230 00105$:
                                   1231 ;	./../../mib/stm8s_mib_debug_cmd.c: 437: mib_printf("\tUnknown command : ");
      000674 4BrA2            [ 1] 1232 	push	#<(___str_13+0)
      000676 4Bs00            [ 1] 1233 	push	#((___str_13+0) >> 8)
      000678 CDr00r00         [ 4] 1234 	call	_mib_printf
      00067B 5B 02            [ 2] 1235 	addw	sp, #2
                                   1236 ;	./../../mib/stm8s_mib_debug_cmd.c: 438: mib_printf("%s", argv[0]);
      00067D 1E 05            [ 2] 1237 	ldw	x, (0x05, sp)
      00067F FE               [ 2] 1238 	ldw	x, (x)
      000680 89               [ 2] 1239 	pushw	x
      000681 4BrB6            [ 1] 1240 	push	#<(___str_14+0)
      000683 4Bs00            [ 1] 1241 	push	#((___str_14+0) >> 8)
      000685 CDr00r00         [ 4] 1242 	call	_mib_printf
      000688 5B 04            [ 2] 1243 	addw	sp, #4
                                   1244 ;	./../../mib/stm8s_mib_debug_cmd.c: 439: mib_printf("\r\n");
      00068A 4Br00            [ 1] 1245 	push	#<(___str_0+0)
      00068C 4Bs00            [ 1] 1246 	push	#((___str_0+0) >> 8)
      00068E CDr00r00         [ 4] 1247 	call	_mib_printf
      000691 5B 02            [ 2] 1248 	addw	sp, #2
      000693                       1249 00106$:
                                   1250 ;	./../../mib/stm8s_mib_debug_cmd.c: 441: return TRUE;
      000693 5F               [ 1] 1251 	clrw	x
      000694 5C               [ 1] 1252 	incw	x
                                   1253 ;	./../../mib/stm8s_mib_debug_cmd.c: 442: }
      000695 5B 02            [ 2] 1254 	addw	sp, #2
      000697 90 85            [ 2] 1255 	popw	y
      000699 5B 02            [ 2] 1256 	addw	sp, #2
      00069B 90 FC            [ 2] 1257 	jp	(y)
                                   1258 ;	./../../mib/stm8s_mib_debug_cmd.c: 452: int getdec(uint8_t **ptr)
                                   1259 ;	-----------------------------------------
                                   1260 ;	 function getdec
                                   1261 ;	-----------------------------------------
      00069D                       1262 _getdec:
      00069D 52 06            [ 2] 1263 	sub	sp, #6
                                   1264 ;	./../../mib/stm8s_mib_debug_cmd.c: 454: uint8_t *p = *ptr;
      00069F 1F 05            [ 2] 1265 	ldw	(0x05, sp), x
      0006A1 FE               [ 2] 1266 	ldw	x, (x)
      0006A2 1F 01            [ 2] 1267 	ldw	(0x01, sp), x
                                   1268 ;	./../../mib/stm8s_mib_debug_cmd.c: 455: int ret = 0;
      0006A4 5F               [ 1] 1269 	clrw	x
      0006A5 1F 03            [ 2] 1270 	ldw	(0x03, sp), x
                                   1271 ;	./../../mib/stm8s_mib_debug_cmd.c: 456: if ((*p < '0') || (*p > '9'))
      0006A7 1E 01            [ 2] 1272 	ldw	x, (0x01, sp)
      0006A9 F6               [ 1] 1273 	ld	a, (x)
      0006AA A1 30            [ 1] 1274 	cp	a, #0x30
      0006AC 25 04            [ 1] 1275 	jrc	00101$
      0006AE A1 39            [ 1] 1276 	cp	a, #0x39
      0006B0 23 04            [ 2] 1277 	jrule	00113$
      0006B2                       1278 00101$:
                                   1279 ;	./../../mib/stm8s_mib_debug_cmd.c: 457: return (-1);
      0006B2 5F               [ 1] 1280 	clrw	x
      0006B3 5A               [ 2] 1281 	decw	x
      0006B4 20 29            [ 2] 1282 	jra	00108$
                                   1283 ;	./../../mib/stm8s_mib_debug_cmd.c: 458: while ((*p >= '0') && (*p <= '9'))
      0006B6                       1284 00113$:
      0006B6 16 01            [ 2] 1285 	ldw	y, (0x01, sp)
      0006B8                       1286 00105$:
      0006B8 90 F6            [ 1] 1287 	ld	a, (y)
      0006BA A1 30            [ 1] 1288 	cp	a, #0x30
      0006BC 25 1C            [ 1] 1289 	jrc	00107$
      0006BE A1 39            [ 1] 1290 	cp	a, #0x39
      0006C0 22 18            [ 1] 1291 	jrugt	00107$
                                   1292 ;	./../../mib/stm8s_mib_debug_cmd.c: 460: ret = ret * 10 + (int)(*p - '0');
      0006C2 1E 03            [ 2] 1293 	ldw	x, (0x03, sp)
      0006C4 58               [ 2] 1294 	sllw	x
      0006C5 58               [ 2] 1295 	sllw	x
      0006C6 72 FB 03         [ 2] 1296 	addw	x, (0x03, sp)
      0006C9 58               [ 2] 1297 	sllw	x
      0006CA 1F 03            [ 2] 1298 	ldw	(0x03, sp), x
      0006CC 5F               [ 1] 1299 	clrw	x
      0006CD 97               [ 1] 1300 	ld	xl, a
      0006CE 1D 00 30         [ 2] 1301 	subw	x, #0x0030
      0006D1 72 FB 03         [ 2] 1302 	addw	x, (0x03, sp)
      0006D4 1F 03            [ 2] 1303 	ldw	(0x03, sp), x
                                   1304 ;	./../../mib/stm8s_mib_debug_cmd.c: 461: p++;
      0006D6 90 5C            [ 1] 1305 	incw	y
      0006D8 20 DE            [ 2] 1306 	jra	00105$
      0006DA                       1307 00107$:
                                   1308 ;	./../../mib/stm8s_mib_debug_cmd.c: 463: *ptr = p;
      0006DA 1E 05            [ 2] 1309 	ldw	x, (0x05, sp)
      0006DC FF               [ 2] 1310 	ldw	(x), y
                                   1311 ;	./../../mib/stm8s_mib_debug_cmd.c: 464: return (ret);
      0006DD 1E 03            [ 2] 1312 	ldw	x, (0x03, sp)
      0006DF                       1313 00108$:
                                   1314 ;	./../../mib/stm8s_mib_debug_cmd.c: 465: }
      0006DF 5B 06            [ 2] 1315 	addw	sp, #6
      0006E1 81               [ 4] 1316 	ret
                                   1317 	.area CODE
                                   1318 	.area CONST
                                   1319 	.area CONST
      000000                       1320 ___str_0:
      000000 0D                    1321 	.db 0x0d
      000001 0A                    1322 	.db 0x0a
      000002 00                    1323 	.db 0x00
                                   1324 	.area CODE
                                   1325 	.area CONST
      000003                       1326 ___str_1:
      000003 08                    1327 	.db 0x08
      000004 20                    1328 	.ascii " "
      000005 08                    1329 	.db 0x08
      000006 00                    1330 	.db 0x00
                                   1331 	.area CODE
                                   1332 	.area CONST
      000007                       1333 ___str_2:
      000007 30 78                 1334 	.ascii "0x"
      000009 00                    1335 	.db 0x00
                                   1336 	.area CODE
                                   1337 	.area CONST
      00000A                       1338 ___str_3:
      00000A 61 64 64 72 65 73 73  1339 	.ascii "address     Hex Value                                       "
             20 20 20 20 20 48 65
             78 20 56 61 6C 75 65
             20 20 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 20 20
      000046 20 41 73 63 69 69 20  1340 	.ascii " Ascii value"
             76 61 6C 75 65
      000052 0D                    1341 	.db 0x0d
      000053 0A                    1342 	.db 0x0a
      000054 00                    1343 	.db 0x00
                                   1344 	.area CODE
                                   1345 	.area CONST
      000055                       1346 ___str_4:
      000055 30 78 25 30 38 6C 78  1347 	.ascii "0x%08lx : "
             20 3A 20
      00005F 00                    1348 	.db 0x00
                                   1349 	.area CODE
                                   1350 	.area CONST
      000060                       1351 ___str_5:
      000060 25 30 32 78 20        1352 	.ascii "%02x "
      000065 00                    1353 	.db 0x00
                                   1354 	.area CODE
                                   1355 	.area CONST
      000066                       1356 ___str_6:
      000066 20                    1357 	.ascii " "
      000067 00                    1358 	.db 0x00
                                   1359 	.area CODE
                                   1360 	.area CONST
      000068                       1361 ___str_7:
      000068 25 63                 1362 	.ascii "%c"
      00006A 00                    1363 	.db 0x00
                                   1364 	.area CODE
                                   1365 	.area CONST
      00006B                       1366 ___str_8:
      00006B 2E                    1367 	.ascii "."
      00006C 00                    1368 	.db 0x00
                                   1369 	.area CODE
                                   1370 	.area CONST
      00006D                       1371 ___str_9:
      00006D 30 78 25 30 38 6C 78  1372 	.ascii "0x%08lx  "
             20 20
      000076 00                    1373 	.db 0x00
                                   1374 	.area CODE
                                   1375 	.area CONST
      000077                       1376 ___str_10:
      000077 20 20 20              1377 	.ascii "   "
      00007A 00                    1378 	.db 0x00
                                   1379 	.area CODE
                                   1380 	.area CONST
      00007B                       1381 ___str_11:
      00007B 2A 2A 2A 2A 2A 2A 2A  1382 	.ascii "*******"
      000082 0D                    1383 	.db 0x0d
      000083 0A                    1384 	.db 0x0a
      000084 00                    1385 	.db 0x00
                                   1386 	.area CODE
                                   1387 	.area CONST
      000085                       1388 ___str_12:
      000085 20 20 68 65 6C 70 20  1389 	.ascii "  help  Help for commands."
             20 48 65 6C 70 20 66
             6F 72 20 63 6F 6D 6D
             61 6E 64 73 2E
      00009F 0D                    1390 	.db 0x0d
      0000A0 0A                    1391 	.db 0x0a
      0000A1 00                    1392 	.db 0x00
                                   1393 	.area CODE
                                   1394 	.area CONST
      0000A2                       1395 ___str_13:
      0000A2 09                    1396 	.db 0x09
      0000A3 55 6E 6B 6E 6F 77 6E  1397 	.ascii "Unknown command : "
             20 63 6F 6D 6D 61 6E
             64 20 3A 20
      0000B5 00                    1398 	.db 0x00
                                   1399 	.area CODE
                                   1400 	.area CONST
      0000B6                       1401 ___str_14:
      0000B6 25 73                 1402 	.ascii "%s"
      0000B8 00                    1403 	.db 0x00
                                   1404 	.area CODE
                                   1405 	.area INITIALIZER
      000000                       1406 __xinit__cmdTbl:
      000000 00 00                 1407 	.dw #0x0000
      000002 00 00                 1408 	.dw #0x0000
      000004 00 00                 1409 	.dw #0x0000
      000006 00 00                 1410 	.dw #0x0000
      000008 00 00                 1411 	.dw #0x0000
      00000A 00 00                 1412 	.dw #0x0000
      00000C 00 00                 1413 	.dw #0x0000
      00000E 00 00                 1414 	.dw #0x0000
      000010 00 00                 1415 	.dw #0x0000
      000012 00 00                 1416 	.dw #0x0000
      000014 00 00                 1417 	.dw #0x0000
      000016 00 00                 1418 	.dw #0x0000
      000018 00 00                 1419 	.dw #0x0000
      00001A 00 00                 1420 	.dw #0x0000
      00001C 00 00                 1421 	.dw #0x0000
      00001E 00 00                 1422 	.dw #0x0000
      000020 00 00                 1423 	.dw #0x0000
      000022 00 00                 1424 	.dw #0x0000
                                   1425 	.area CABS (ABS)
