                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.10 #13778 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_beep_main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _cmd_test_init_before_irq_enable
                                     12 	.globl _cmd_test
                                     13 	.globl _cmd_beep
                                     14 	.globl _fnBeepStart
                                     15 	.globl _DecToLong
                                     16 	.globl _HexToInt
                                     17 	.globl _mib_printf
                                     18 	.globl _MibWriteDebugString
                                     19 	.globl ___memcpy
                                     20 	.globl _strcmp
                                     21 	.globl _FLASH_ProgramOptionByte
                                     22 	.globl _FLASH_ReadOptionByte
                                     23 	.globl _FLASH_ReadByte
                                     24 	.globl _FLASH_Unlock
                                     25 	.globl _gbDelayData
                                     26 	.globl _GPIO_Configuration
                                     27 	.globl _calConfigBEEP_test
                                     28 	.globl _Delay
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DATA
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area INITIALIZED
      000000                         37 _gbDelayData::
      000000                         38 	.ds 1
      000001                         39 _cmdTbl_only:
      000001                         40 	.ds 12
                                     41 ;--------------------------------------------------------
                                     42 ; absolute external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DABS (ABS)
                                     45 
                                     46 ; default segment ordering for linker
                                     47 	.area HOME
                                     48 	.area GSINIT
                                     49 	.area GSFINAL
                                     50 	.area CONST
                                     51 	.area INITIALIZER
                                     52 	.area CODE
                                     53 
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area HOME
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area HOME
                                     65 	.area HOME
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area CODE
                                     70 ;	stm8s_beep_main.c: 185: void cmd_beep(void)
                                     71 ;	-----------------------------------------
                                     72 ;	 function cmd_beep
                                     73 ;	-----------------------------------------
      000000                         74 _cmd_beep:
      000000 52 0A            [ 2]   75 	sub	sp, #10
                                     76 ;	stm8s_beep_main.c: 191: for (cptr = cmdTbl;; cptr++) 
      000002 AEr00r00         [ 2]   77 	ldw	x, #(_cmdTbl+0)
      000005 1F 01            [ 2]   78 	ldw	(0x01, sp), x
      000007 5F               [ 1]   79 	clrw	x
      000008 1F 07            [ 2]   80 	ldw	(0x07, sp), x
      00000A 1F 05            [ 2]   81 	ldw	(0x05, sp), x
      00000C 16 01            [ 2]   82 	ldw	y, (0x01, sp)
      00000E 17 09            [ 2]   83 	ldw	(0x09, sp), y
      000010                         84 00106$:
                                     85 ;	stm8s_beep_main.c: 193: if(cptr->cmd==0)
      000010 1E 09            [ 2]   86 	ldw	x, (0x09, sp)
      000012 FE               [ 2]   87 	ldw	x, (x)
      000013 1F 03            [ 2]   88 	ldw	(0x03, sp), x
      000015 26 19            [ 1]   89 	jrne	00102$
                                     90 ;	stm8s_beep_main.c: 195: ccprintf(1,("INFO:+cmd_beep...\r\n"));
      000017 4Br00            [ 1]   91 	push	#<(__str_0+0)
      000019 4Bs00            [ 1]   92 	push	#((__str_0+0) >> 8)
      00001B CDr00r00         [ 4]   93 	call	_mib_printf
      00001E 5B 02            [ 2]   94 	addw	sp, #2
                                     95 ;	stm8s_beep_main.c: 196: memcpy((void *)&(cptr->cmd),(void *)&(cmdTbl_only[0].cmd),sizeof(CMD_MY));
      000020 AEr00r01         [ 2]   96 	ldw	x, #_cmdTbl_only+0
      000023 16 01            [ 2]   97 	ldw	y, (0x01, sp)
      000025 4B 06            [ 1]   98 	push	#0x06
      000027 4B 00            [ 1]   99 	push	#0x00
      000029 89               [ 2]  100 	pushw	x
      00002A 93               [ 1]  101 	ldw	x, y
      00002B CDr00r00         [ 4]  102 	call	___memcpy
                                    103 ;	stm8s_beep_main.c: 197: break;
      00002E 20 2F            [ 2]  104 	jra	00105$
      000030                        105 00102$:
                                    106 ;	stm8s_beep_main.c: 199: index++;
      000030 1E 07            [ 2]  107 	ldw	x, (0x07, sp)
      000032 5C               [ 1]  108 	incw	x
      000033 1F 07            [ 2]  109 	ldw	(0x07, sp), x
      000035 26 05            [ 1]  110 	jrne	00126$
      000037 1E 05            [ 2]  111 	ldw	x, (0x05, sp)
      000039 5C               [ 1]  112 	incw	x
      00003A 1F 05            [ 2]  113 	ldw	(0x05, sp), x
      00003C                        114 00126$:
                                    115 ;	stm8s_beep_main.c: 200: if(index>MAX_COMMANDS)
      00003C AE 00 06         [ 2]  116 	ldw	x, #0x0006
      00003F 13 07            [ 2]  117 	cpw	x, (0x07, sp)
      000041 4F               [ 1]  118 	clr	a
      000042 12 06            [ 1]  119 	sbc	a, (0x06, sp)
      000044 4F               [ 1]  120 	clr	a
      000045 12 05            [ 1]  121 	sbc	a, (0x05, sp)
      000047 24 0B            [ 1]  122 	jrnc	00107$
                                    123 ;	stm8s_beep_main.c: 202: ccprintf(1,("INFO:-cmd_beep...\r\n"));
      000049 4Br14            [ 1]  124 	push	#<(__str_1+0)
      00004B 4Bs00            [ 1]  125 	push	#((__str_1+0) >> 8)
      00004D CDr00r00         [ 4]  126 	call	_mib_printf
      000050 5B 02            [ 2]  127 	addw	sp, #2
                                    128 ;	stm8s_beep_main.c: 203: return;
      000052 20 0B            [ 2]  129 	jra	00108$
      000054                        130 00107$:
                                    131 ;	stm8s_beep_main.c: 191: for (cptr = cmdTbl;; cptr++) 
      000054 1E 09            [ 2]  132 	ldw	x, (0x09, sp)
      000056 1C 00 06         [ 2]  133 	addw	x, #0x0006
      000059 1F 09            [ 2]  134 	ldw	(0x09, sp), x
      00005B 1F 01            [ 2]  135 	ldw	(0x01, sp), x
      00005D 20 B1            [ 2]  136 	jra	00106$
      00005F                        137 00105$:
                                    138 ;	stm8s_beep_main.c: 206: return;
      00005F                        139 00108$:
                                    140 ;	stm8s_beep_main.c: 207: }
      00005F 5B 0A            [ 2]  141 	addw	sp, #10
      000061 81               [ 4]  142 	ret
                                    143 ;	stm8s_beep_main.c: 212: void cmd_test(void)
                                    144 ;	-----------------------------------------
                                    145 ;	 function cmd_test
                                    146 ;	-----------------------------------------
      000062                        147 _cmd_test:
                                    148 ;	stm8s_beep_main.c: 214: cmd_beep();
                                    149 ;	stm8s_beep_main.c: 215: }
      000062 CCr00r00         [ 2]  150 	jp	_cmd_beep
                                    151 ;	stm8s_beep_main.c: 221: void cmd_test_init_before_irq_enable(void)
                                    152 ;	-----------------------------------------
                                    153 ;	 function cmd_test_init_before_irq_enable
                                    154 ;	-----------------------------------------
      000065                        155 _cmd_test_init_before_irq_enable:
                                    156 ;	stm8s_beep_main.c: 224: }
      000065 81               [ 4]  157 	ret
                                    158 ;	stm8s_beep_main.c: 237: static int DoBEEP(CMD_MY *cptr, int argc, char **argv)
                                    159 ;	-----------------------------------------
                                    160 ;	 function DoBEEP
                                    161 ;	-----------------------------------------
      000066                        162 _DoBEEP:
      000066 52 13            [ 2]  163 	sub	sp, #19
      000068 51               [ 1]  164 	exgw	x, y
                                    165 ;	stm8s_beep_main.c: 239: uint32_t vdwAddr = 0;
      000069 5F               [ 1]  166 	clrw	x
      00006A 1F 03            [ 2]  167 	ldw	(0x03, sp), x
      00006C 1F 01            [ 2]  168 	ldw	(0x01, sp), x
                                    169 ;	stm8s_beep_main.c: 240: uint8_t vbData = 0;
      00006E 0F 05            [ 1]  170 	clr	(0x05, sp)
                                    171 ;	stm8s_beep_main.c: 241: uint16_t vwData = 0;
      000070 5F               [ 1]  172 	clrw	x
      000071 1F 06            [ 2]  173 	ldw	(0x06, sp), x
                                    174 ;	stm8s_beep_main.c: 242: uint16_t vwDataDelay = 0;
      000073 5F               [ 1]  175 	clrw	x
      000074 1F 08            [ 2]  176 	ldw	(0x08, sp), x
                                    177 ;	stm8s_beep_main.c: 246: MibWriteDebugString(cptr->usage);
      000076 93               [ 1]  178 	ldw	x, y
      000077 1C 00 04         [ 2]  179 	addw	x, #0x0004
      00007A 1F 0A            [ 2]  180 	ldw	(0x0a, sp), x
                                    181 ;	stm8s_beep_main.c: 244: if (argc < 2)
      00007C 1E 16            [ 2]  182 	ldw	x, (0x16, sp)
      00007E A3 00 02         [ 2]  183 	cpw	x, #0x0002
      000081 2E 0A            [ 1]  184 	jrsge	00102$
                                    185 ;	stm8s_beep_main.c: 246: MibWriteDebugString(cptr->usage);
      000083 1E 0A            [ 2]  186 	ldw	x, (0x0a, sp)
      000085 FE               [ 2]  187 	ldw	x, (x)
      000086 CDr00r00         [ 4]  188 	call	_MibWriteDebugString
                                    189 ;	stm8s_beep_main.c: 247: return FALSE;
      000089 5F               [ 1]  190 	clrw	x
      00008A CCr04r77         [ 2]  191 	jp	00187$
      00008D                        192 00102$:
                                    193 ;	stm8s_beep_main.c: 252: if (!strcmp(argv[1], "write")) // _CMD_MY_WRITE_
      00008D 1E 18            [ 2]  194 	ldw	x, (0x18, sp)
      00008F 5C               [ 1]  195 	incw	x
      000090 5C               [ 1]  196 	incw	x
      000091 1F 0C            [ 2]  197 	ldw	(0x0c, sp), x
      000093 FE               [ 2]  198 	ldw	x, (x)
      000094 4Br28            [ 1]  199 	push	#<(___str_2+0)
      000096 4Bs00            [ 1]  200 	push	#((___str_2+0) >> 8)
      000098 CDr00r00         [ 4]  201 	call	_strcmp
      00009B 51               [ 1]  202 	exgw	x, y
                                    203 ;	stm8s_beep_main.c: 254: if (argc < 4)
      00009C 1E 16            [ 2]  204 	ldw	x, (0x16, sp)
      00009E A3 00 04         [ 2]  205 	cpw	x, #0x0004
      0000A1 2F 04            [ 1]  206 	jrslt	00365$
      0000A3 0F 0E            [ 1]  207 	clr	(0x0e, sp)
      0000A5 20 04            [ 2]  208 	jra	00366$
      0000A7                        209 00365$:
      0000A7 A6 01            [ 1]  210 	ld	a, #0x01
      0000A9 6B 0E            [ 1]  211 	ld	(0x0e, sp), a
      0000AB                        212 00366$:
                                    213 ;	stm8s_beep_main.c: 259: if (!HexToInt(argv[2], &vdwAddr, 32))
      0000AB 1E 18            [ 2]  214 	ldw	x, (0x18, sp)
      0000AD 1C 00 04         [ 2]  215 	addw	x, #0x0004
      0000B0 1F 0F            [ 2]  216 	ldw	(0x0f, sp), x
                                    217 ;	stm8s_beep_main.c: 264: if (!HexToInt(argv[3], &vbData, 8))
      0000B2 1E 18            [ 2]  218 	ldw	x, (0x18, sp)
      0000B4 1C 00 06         [ 2]  219 	addw	x, #0x0006
      0000B7 1F 11            [ 2]  220 	ldw	(0x11, sp), x
                                    221 ;	stm8s_beep_main.c: 252: if (!strcmp(argv[1], "write")) // _CMD_MY_WRITE_
      0000B9 90 5D            [ 2]  222 	tnzw	y
      0000BB 26 6A            [ 1]  223 	jrne	00185$
                                    224 ;	stm8s_beep_main.c: 254: if (argc < 4)
      0000BD 0D 0E            [ 1]  225 	tnz	(0x0e, sp)
      0000BF 27 0A            [ 1]  226 	jreq	00104$
                                    227 ;	stm8s_beep_main.c: 256: MibWriteDebugString(cptr->usage);
      0000C1 1E 0A            [ 2]  228 	ldw	x, (0x0a, sp)
      0000C3 FE               [ 2]  229 	ldw	x, (x)
      0000C4 CDr00r00         [ 4]  230 	call	_MibWriteDebugString
                                    231 ;	stm8s_beep_main.c: 257: return FALSE;
      0000C7 5F               [ 1]  232 	clrw	x
      0000C8 CCr04r77         [ 2]  233 	jp	00187$
      0000CB                        234 00104$:
                                    235 ;	stm8s_beep_main.c: 259: if (!HexToInt(argv[2], &vdwAddr, 32))
      0000CB 96               [ 1]  236 	ldw	x, sp
      0000CC 5C               [ 1]  237 	incw	x
      0000CD 51               [ 1]  238 	exgw	x, y
      0000CE 1E 0F            [ 2]  239 	ldw	x, (0x0f, sp)
      0000D0 FE               [ 2]  240 	ldw	x, (x)
      0000D1 4B 20            [ 1]  241 	push	#0x20
      0000D3 4B 00            [ 1]  242 	push	#0x00
      0000D5 90 89            [ 2]  243 	pushw	y
      0000D7 CDr00r00         [ 4]  244 	call	_HexToInt
      0000DA 5D               [ 2]  245 	tnzw	x
      0000DB 26 0D            [ 1]  246 	jrne	00106$
                                    247 ;	stm8s_beep_main.c: 261: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      0000DD 4Br2E            [ 1]  248 	push	#<(__str_3+0)
      0000DF 4Bs00            [ 1]  249 	push	#((__str_3+0) >> 8)
      0000E1 CDr00r00         [ 4]  250 	call	_mib_printf
      0000E4 5B 02            [ 2]  251 	addw	sp, #2
                                    252 ;	stm8s_beep_main.c: 262: return FALSE;
      0000E6 5F               [ 1]  253 	clrw	x
      0000E7 CCr04r77         [ 2]  254 	jp	00187$
      0000EA                        255 00106$:
                                    256 ;	stm8s_beep_main.c: 264: if (!HexToInt(argv[3], &vbData, 8))
      0000EA 96               [ 1]  257 	ldw	x, sp
      0000EB 1C 00 05         [ 2]  258 	addw	x, #5
      0000EE 51               [ 1]  259 	exgw	x, y
      0000EF 1E 11            [ 2]  260 	ldw	x, (0x11, sp)
      0000F1 FE               [ 2]  261 	ldw	x, (x)
      0000F2 4B 08            [ 1]  262 	push	#0x08
      0000F4 4B 00            [ 1]  263 	push	#0x00
      0000F6 90 89            [ 2]  264 	pushw	y
      0000F8 CDr00r00         [ 4]  265 	call	_HexToInt
      0000FB 5D               [ 2]  266 	tnzw	x
      0000FC 26 0D            [ 1]  267 	jrne	00108$
                                    268 ;	stm8s_beep_main.c: 266: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      0000FE 4Br2E            [ 1]  269 	push	#<(__str_3+0)
      000100 4Bs00            [ 1]  270 	push	#((__str_3+0) >> 8)
      000102 CDr00r00         [ 4]  271 	call	_mib_printf
      000105 5B 02            [ 2]  272 	addw	sp, #2
                                    273 ;	stm8s_beep_main.c: 267: return FALSE;
      000107 5F               [ 1]  274 	clrw	x
      000108 CCr04r77         [ 2]  275 	jp	00187$
      00010B                        276 00108$:
                                    277 ;	stm8s_beep_main.c: 269: wr_ADDR8(vdwAddr, vbData);
      00010B 1E 03            [ 2]  278 	ldw	x, (0x03, sp)
      00010D 7B 05            [ 1]  279 	ld	a, (0x05, sp)
      00010F F7               [ 1]  280 	ld	(x), a
                                    281 ;	stm8s_beep_main.c: 270: ccprintf(_DEBUG_CMD_A_,("wr_ADDR8 : 0x%08lx[0x%02x]\r\n", vdwAddr,vbData));
      000110 5F               [ 1]  282 	clrw	x
      000111 7B 05            [ 1]  283 	ld	a, (0x05, sp)
      000113 97               [ 1]  284 	ld	xl, a
      000114 89               [ 2]  285 	pushw	x
      000115 1E 05            [ 2]  286 	ldw	x, (0x05, sp)
      000117 89               [ 2]  287 	pushw	x
      000118 1E 05            [ 2]  288 	ldw	x, (0x05, sp)
      00011A 89               [ 2]  289 	pushw	x
      00011B 4Br4B            [ 1]  290 	push	#<(__str_4+0)
      00011D 4Bs00            [ 1]  291 	push	#((__str_4+0) >> 8)
      00011F CDr00r00         [ 4]  292 	call	_mib_printf
      000122 5B 08            [ 2]  293 	addw	sp, #8
      000124 CCr04r75         [ 2]  294 	jp	00186$
      000127                        295 00185$:
                                    296 ;	stm8s_beep_main.c: 275: else if (!strcmp(argv[1], "read")) // _CMD_MY_READ_
      000127 1E 0C            [ 2]  297 	ldw	x, (0x0c, sp)
      000129 FE               [ 2]  298 	ldw	x, (x)
      00012A 4Br68            [ 1]  299 	push	#<(___str_5+0)
      00012C 4Bs00            [ 1]  300 	push	#((___str_5+0) >> 8)
      00012E CDr00r00         [ 4]  301 	call	_strcmp
      000131 51               [ 1]  302 	exgw	x, y
                                    303 ;	stm8s_beep_main.c: 277: if (argc < 3)
      000132 1E 16            [ 2]  304 	ldw	x, (0x16, sp)
      000134 A3 00 03         [ 2]  305 	cpw	x, #0x0003
      000137 2F 04            [ 1]  306 	jrslt	00371$
      000139 0F 13            [ 1]  307 	clr	(0x13, sp)
      00013B 20 04            [ 2]  308 	jra	00372$
      00013D                        309 00371$:
      00013D A6 01            [ 1]  310 	ld	a, #0x01
      00013F 6B 13            [ 1]  311 	ld	(0x13, sp), a
      000141                        312 00372$:
                                    313 ;	stm8s_beep_main.c: 275: else if (!strcmp(argv[1], "read")) // _CMD_MY_READ_
      000141 90 5D            [ 2]  314 	tnzw	y
      000143 26 47            [ 1]  315 	jrne	00182$
                                    316 ;	stm8s_beep_main.c: 277: if (argc < 3)
      000145 0D 13            [ 1]  317 	tnz	(0x13, sp)
      000147 27 0A            [ 1]  318 	jreq	00110$
                                    319 ;	stm8s_beep_main.c: 279: MibWriteDebugString(cptr->usage);
      000149 1E 0A            [ 2]  320 	ldw	x, (0x0a, sp)
      00014B FE               [ 2]  321 	ldw	x, (x)
      00014C CDr00r00         [ 4]  322 	call	_MibWriteDebugString
                                    323 ;	stm8s_beep_main.c: 280: return FALSE;
      00014F 5F               [ 1]  324 	clrw	x
      000150 CCr04r77         [ 2]  325 	jp	00187$
      000153                        326 00110$:
                                    327 ;	stm8s_beep_main.c: 282: if (!HexToInt(argv[2], &vdwAddr, 32))
      000153 96               [ 1]  328 	ldw	x, sp
      000154 5C               [ 1]  329 	incw	x
      000155 16 0F            [ 2]  330 	ldw	y, (0x0f, sp)
      000157 90 FE            [ 2]  331 	ldw	y, (y)
      000159 4B 20            [ 1]  332 	push	#0x20
      00015B 4B 00            [ 1]  333 	push	#0x00
      00015D 89               [ 2]  334 	pushw	x
      00015E 93               [ 1]  335 	ldw	x, y
      00015F CDr00r00         [ 4]  336 	call	_HexToInt
      000162 5D               [ 2]  337 	tnzw	x
      000163 26 0D            [ 1]  338 	jrne	00112$
                                    339 ;	stm8s_beep_main.c: 284: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      000165 4Br2E            [ 1]  340 	push	#<(__str_3+0)
      000167 4Bs00            [ 1]  341 	push	#((__str_3+0) >> 8)
      000169 CDr00r00         [ 4]  342 	call	_mib_printf
      00016C 5B 02            [ 2]  343 	addw	sp, #2
                                    344 ;	stm8s_beep_main.c: 285: return FALSE;
      00016E 5F               [ 1]  345 	clrw	x
      00016F CCr04r77         [ 2]  346 	jp	00187$
      000172                        347 00112$:
                                    348 ;	stm8s_beep_main.c: 288: vbData = rd_ADDR8(vdwAddr);
      000172 1E 03            [ 2]  349 	ldw	x, (0x03, sp)
      000174 F6               [ 1]  350 	ld	a, (x)
      000175 6B 05            [ 1]  351 	ld	(0x05, sp), a
                                    352 ;	stm8s_beep_main.c: 290: ccprintf(_DEBUG_CMD_A_,("rd_ADDR8 : 0x%08lx[0x%02x]\r\n", vdwAddr,vbData));
      000177 5F               [ 1]  353 	clrw	x
      000178 97               [ 1]  354 	ld	xl, a
      000179 89               [ 2]  355 	pushw	x
      00017A 1E 05            [ 2]  356 	ldw	x, (0x05, sp)
      00017C 89               [ 2]  357 	pushw	x
      00017D 1E 05            [ 2]  358 	ldw	x, (0x05, sp)
      00017F 89               [ 2]  359 	pushw	x
      000180 4Br6D            [ 1]  360 	push	#<(__str_6+0)
      000182 4Bs00            [ 1]  361 	push	#((__str_6+0) >> 8)
      000184 CDr00r00         [ 4]  362 	call	_mib_printf
      000187 5B 08            [ 2]  363 	addw	sp, #8
      000189 CCr04r75         [ 2]  364 	jp	00186$
      00018C                        365 00182$:
                                    366 ;	stm8s_beep_main.c: 295: else if (!strcmp(argv[1], "freq")) // _CMD_MY_READ_
      00018C 1E 0C            [ 2]  367 	ldw	x, (0x0c, sp)
      00018E FE               [ 2]  368 	ldw	x, (x)
      00018F 4Br8A            [ 1]  369 	push	#<(___str_7+0)
      000191 4Bs00            [ 1]  370 	push	#((___str_7+0) >> 8)
      000193 CDr00r00         [ 4]  371 	call	_strcmp
      000196 5D               [ 2]  372 	tnzw	x
      000197 26 43            [ 1]  373 	jrne	00179$
                                    374 ;	stm8s_beep_main.c: 297: if (argc < 3)
      000199 0D 13            [ 1]  375 	tnz	(0x13, sp)
      00019B 27 0A            [ 1]  376 	jreq	00114$
                                    377 ;	stm8s_beep_main.c: 299: MibWriteDebugString(cptr->usage);
      00019D 1E 0A            [ 2]  378 	ldw	x, (0x0a, sp)
      00019F FE               [ 2]  379 	ldw	x, (x)
      0001A0 CDr00r00         [ 4]  380 	call	_MibWriteDebugString
                                    381 ;	stm8s_beep_main.c: 300: return FALSE;
      0001A3 5F               [ 1]  382 	clrw	x
      0001A4 CCr04r77         [ 2]  383 	jp	00187$
      0001A7                        384 00114$:
                                    385 ;	stm8s_beep_main.c: 303: if (!DecToLong(argv[2], &vwData, 16))
      0001A7 96               [ 1]  386 	ldw	x, sp
      0001A8 1C 00 06         [ 2]  387 	addw	x, #6
      0001AB 51               [ 1]  388 	exgw	x, y
      0001AC 1E 0F            [ 2]  389 	ldw	x, (0x0f, sp)
      0001AE FE               [ 2]  390 	ldw	x, (x)
      0001AF 4B 10            [ 1]  391 	push	#0x10
      0001B1 4B 00            [ 1]  392 	push	#0x00
      0001B3 90 89            [ 2]  393 	pushw	y
      0001B5 CDr00r00         [ 4]  394 	call	_DecToLong
      0001B8 5D               [ 2]  395 	tnzw	x
      0001B9 26 0D            [ 1]  396 	jrne	00116$
                                    397 ;	stm8s_beep_main.c: 305: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      0001BB 4Br2E            [ 1]  398 	push	#<(__str_3+0)
      0001BD 4Bs00            [ 1]  399 	push	#((__str_3+0) >> 8)
      0001BF CDr00r00         [ 4]  400 	call	_mib_printf
      0001C2 5B 02            [ 2]  401 	addw	sp, #2
                                    402 ;	stm8s_beep_main.c: 306: return FALSE;
      0001C4 5F               [ 1]  403 	clrw	x
      0001C5 CCr04r77         [ 2]  404 	jp	00187$
      0001C8                        405 00116$:
                                    406 ;	stm8s_beep_main.c: 308: ccprintf(_DEBUG_CMD_A_, ("beep freq : [%d] Hz\r\n",(vwData)));		
      0001C8 1E 06            [ 2]  407 	ldw	x, (0x06, sp)
      0001CA 89               [ 2]  408 	pushw	x
      0001CB 4Br8F            [ 1]  409 	push	#<(__str_8+0)
      0001CD 4Bs00            [ 1]  410 	push	#((__str_8+0) >> 8)
      0001CF CDr00r00         [ 4]  411 	call	_mib_printf
      0001D2 5B 04            [ 2]  412 	addw	sp, #4
                                    413 ;	stm8s_beep_main.c: 309: calConfigBEEP_test(vwData);
      0001D4 1E 06            [ 2]  414 	ldw	x, (0x06, sp)
      0001D6 CDr04rAA         [ 4]  415 	call	_calConfigBEEP_test
      0001D9 CCr04r75         [ 2]  416 	jp	00186$
      0001DC                        417 00179$:
                                    418 ;	stm8s_beep_main.c: 314: else if (!strcmp(argv[1], "enable")) // _CMD_MY_READ_
      0001DC 1E 0C            [ 2]  419 	ldw	x, (0x0c, sp)
      0001DE FE               [ 2]  420 	ldw	x, (x)
      0001DF 4BrA5            [ 1]  421 	push	#<(___str_9+0)
      0001E1 4Bs00            [ 1]  422 	push	#((___str_9+0) >> 8)
      0001E3 CDr00r00         [ 4]  423 	call	_strcmp
      0001E6 5D               [ 2]  424 	tnzw	x
      0001E7 26 16            [ 1]  425 	jrne	00176$
                                    426 ;	stm8s_beep_main.c: 317: BEEP->CSR |= BEEP_CSR_BEEPEN;
      0001E9 72 1A 50 F3      [ 1]  427 	bset	0x50f3, #5
                                    428 ;	stm8s_beep_main.c: 318: ccprintf(_DEBUG_CMD_A_, ("beep enable....(0x%x)\r\n",BEEP->CSR));
      0001ED C6 50 F3         [ 1]  429 	ld	a, 0x50f3
      0001F0 5F               [ 1]  430 	clrw	x
      0001F1 97               [ 1]  431 	ld	xl, a
      0001F2 89               [ 2]  432 	pushw	x
      0001F3 4BrAC            [ 1]  433 	push	#<(__str_10+0)
      0001F5 4Bs00            [ 1]  434 	push	#((__str_10+0) >> 8)
      0001F7 CDr00r00         [ 4]  435 	call	_mib_printf
      0001FA 5B 04            [ 2]  436 	addw	sp, #4
      0001FC CCr04r75         [ 2]  437 	jp	00186$
      0001FF                        438 00176$:
                                    439 ;	stm8s_beep_main.c: 323: else if (!strcmp(argv[1], "disable")) // _CMD_MY_READ_
      0001FF 1E 0C            [ 2]  440 	ldw	x, (0x0c, sp)
      000201 FE               [ 2]  441 	ldw	x, (x)
      000202 4BrC4            [ 1]  442 	push	#<(___str_11+0)
      000204 4Bs00            [ 1]  443 	push	#((___str_11+0) >> 8)
      000206 CDr00r00         [ 4]  444 	call	_strcmp
      000209 5D               [ 2]  445 	tnzw	x
      00020A 26 16            [ 1]  446 	jrne	00173$
                                    447 ;	stm8s_beep_main.c: 326: BEEP->CSR &= (uint8_t)(~BEEP_CSR_BEEPEN);
      00020C 72 1B 50 F3      [ 1]  448 	bres	0x50f3, #5
                                    449 ;	stm8s_beep_main.c: 327: ccprintf(_DEBUG_CMD_A_, ("beep disable....(0x%x)\r\n",BEEP->CSR));
      000210 C6 50 F3         [ 1]  450 	ld	a, 0x50f3
      000213 5F               [ 1]  451 	clrw	x
      000214 97               [ 1]  452 	ld	xl, a
      000215 89               [ 2]  453 	pushw	x
      000216 4BrCC            [ 1]  454 	push	#<(__str_12+0)
      000218 4Bs00            [ 1]  455 	push	#((__str_12+0) >> 8)
      00021A CDr00r00         [ 4]  456 	call	_mib_printf
      00021D 5B 04            [ 2]  457 	addw	sp, #4
      00021F CCr04r75         [ 2]  458 	jp	00186$
      000222                        459 00173$:
                                    460 ;	stm8s_beep_main.c: 332: else if (!strcmp(argv[1], "start")) // _CMD_MY_READ_
      000222 1E 0C            [ 2]  461 	ldw	x, (0x0c, sp)
      000224 FE               [ 2]  462 	ldw	x, (x)
      000225 4BrE5            [ 1]  463 	push	#<(___str_13+0)
      000227 4Bs00            [ 1]  464 	push	#((___str_13+0) >> 8)
      000229 CDr00r00         [ 4]  465 	call	_strcmp
                                    466 ;	stm8s_beep_main.c: 334: vwDataDelay = 0;
      00022C 5D               [ 2]  467 	tnzw	x
      00022D 26 79            [ 1]  468 	jrne	00170$
      00022F 1F 08            [ 2]  469 	ldw	(0x08, sp), x
                                    470 ;	stm8s_beep_main.c: 335: if (argc < 3)
      000231 0D 13            [ 1]  471 	tnz	(0x13, sp)
      000233 27 0A            [ 1]  472 	jreq	00118$
                                    473 ;	stm8s_beep_main.c: 337: MibWriteDebugString(cptr->usage);
      000235 1E 0A            [ 2]  474 	ldw	x, (0x0a, sp)
      000237 FE               [ 2]  475 	ldw	x, (x)
      000238 CDr00r00         [ 4]  476 	call	_MibWriteDebugString
                                    477 ;	stm8s_beep_main.c: 338: return FALSE;
      00023B 5F               [ 1]  478 	clrw	x
      00023C CCr04r77         [ 2]  479 	jp	00187$
      00023F                        480 00118$:
                                    481 ;	stm8s_beep_main.c: 341: if (!DecToLong(argv[2], &vwData, 16))
      00023F 96               [ 1]  482 	ldw	x, sp
      000240 1C 00 06         [ 2]  483 	addw	x, #6
      000243 51               [ 1]  484 	exgw	x, y
      000244 1E 0F            [ 2]  485 	ldw	x, (0x0f, sp)
      000246 FE               [ 2]  486 	ldw	x, (x)
      000247 4B 10            [ 1]  487 	push	#0x10
      000249 4B 00            [ 1]  488 	push	#0x00
      00024B 90 89            [ 2]  489 	pushw	y
      00024D CDr00r00         [ 4]  490 	call	_DecToLong
      000250 5D               [ 2]  491 	tnzw	x
      000251 26 0D            [ 1]  492 	jrne	00120$
                                    493 ;	stm8s_beep_main.c: 343: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      000253 4Br2E            [ 1]  494 	push	#<(__str_3+0)
      000255 4Bs00            [ 1]  495 	push	#((__str_3+0) >> 8)
      000257 CDr00r00         [ 4]  496 	call	_mib_printf
      00025A 5B 02            [ 2]  497 	addw	sp, #2
                                    498 ;	stm8s_beep_main.c: 344: return FALSE;
      00025C 5F               [ 1]  499 	clrw	x
      00025D CCr04r77         [ 2]  500 	jp	00187$
      000260                        501 00120$:
                                    502 ;	stm8s_beep_main.c: 346: if (argc >= 4)
      000260 7B 0E            [ 1]  503 	ld	a, (0x0e, sp)
      000262 26 21            [ 1]  504 	jrne	00124$
                                    505 ;	stm8s_beep_main.c: 348: if (!DecToLong(argv[3], &vwDataDelay, 16))
      000264 96               [ 1]  506 	ldw	x, sp
      000265 1C 00 08         [ 2]  507 	addw	x, #8
      000268 51               [ 1]  508 	exgw	x, y
      000269 1E 11            [ 2]  509 	ldw	x, (0x11, sp)
      00026B FE               [ 2]  510 	ldw	x, (x)
      00026C 4B 10            [ 1]  511 	push	#0x10
      00026E 4B 00            [ 1]  512 	push	#0x00
      000270 90 89            [ 2]  513 	pushw	y
      000272 CDr00r00         [ 4]  514 	call	_DecToLong
      000275 5D               [ 2]  515 	tnzw	x
      000276 26 0D            [ 1]  516 	jrne	00124$
                                    517 ;	stm8s_beep_main.c: 350: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      000278 4Br2E            [ 1]  518 	push	#<(__str_3+0)
      00027A 4Bs00            [ 1]  519 	push	#((__str_3+0) >> 8)
      00027C CDr00r00         [ 4]  520 	call	_mib_printf
      00027F 5B 02            [ 2]  521 	addw	sp, #2
                                    522 ;	stm8s_beep_main.c: 351: return FALSE;
      000281 5F               [ 1]  523 	clrw	x
      000282 CCr04r77         [ 2]  524 	jp	00187$
      000285                        525 00124$:
                                    526 ;	stm8s_beep_main.c: 354: ccprintf(_DEBUG_CMD_A_, ("beep freq : [%d]Hz\r\n",(vwData)));		
      000285 1E 06            [ 2]  527 	ldw	x, (0x06, sp)
      000287 89               [ 2]  528 	pushw	x
      000288 4BrEB            [ 1]  529 	push	#<(__str_14+0)
      00028A 4Bs00            [ 1]  530 	push	#((__str_14+0) >> 8)
      00028C CDr00r00         [ 4]  531 	call	_mib_printf
      00028F 5B 04            [ 2]  532 	addw	sp, #4
                                    533 ;	stm8s_beep_main.c: 355: ccprintf(_DEBUG_CMD_A_, ("beep delay : [%d]msec\r\n",(vwDataDelay)));		
      000291 1E 08            [ 2]  534 	ldw	x, (0x08, sp)
      000293 89               [ 2]  535 	pushw	x
      000294 4Br00            [ 1]  536 	push	#<(__str_15+0)
      000296 4Bs01            [ 1]  537 	push	#((__str_15+0) >> 8)
      000298 CDr00r00         [ 4]  538 	call	_mib_printf
      00029B 5B 04            [ 2]  539 	addw	sp, #4
                                    540 ;	stm8s_beep_main.c: 356: fnBeepStart(vwData,vwDataDelay);
      00029D 1E 08            [ 2]  541 	ldw	x, (0x08, sp)
      00029F 89               [ 2]  542 	pushw	x
      0002A0 1E 08            [ 2]  543 	ldw	x, (0x08, sp)
      0002A2 CDr00r00         [ 4]  544 	call	_fnBeepStart
      0002A5 CCr04r75         [ 2]  545 	jp	00186$
      0002A8                        546 00170$:
                                    547 ;	stm8s_beep_main.c: 380: else if (!strcmp(argv[1], "toggle")) // _CMD_MY_READ_
      0002A8 1E 0C            [ 2]  548 	ldw	x, (0x0c, sp)
      0002AA FE               [ 2]  549 	ldw	x, (x)
      0002AB 4Br18            [ 1]  550 	push	#<(___str_16+0)
      0002AD 4Bs01            [ 1]  551 	push	#((___str_16+0) >> 8)
      0002AF CDr00r00         [ 4]  552 	call	_strcmp
      0002B2 5D               [ 2]  553 	tnzw	x
      0002B3 27 03            [ 1]  554 	jreq	00386$
      0002B5 CCr03rAB         [ 2]  555 	jp	00167$
      0002B8                        556 00386$:
                                    557 ;	stm8s_beep_main.c: 382: if (argc < 3)
      0002B8 0D 13            [ 1]  558 	tnz	(0x13, sp)
      0002BA 27 0A            [ 1]  559 	jreq	00126$
                                    560 ;	stm8s_beep_main.c: 384: MibWriteDebugString(cptr->usage);
      0002BC 1E 0A            [ 2]  561 	ldw	x, (0x0a, sp)
      0002BE FE               [ 2]  562 	ldw	x, (x)
      0002BF CDr00r00         [ 4]  563 	call	_MibWriteDebugString
                                    564 ;	stm8s_beep_main.c: 385: return FALSE;
      0002C2 5F               [ 1]  565 	clrw	x
      0002C3 CCr04r77         [ 2]  566 	jp	00187$
      0002C6                        567 00126$:
                                    568 ;	stm8s_beep_main.c: 388: if (!DecToLong(argv[2], &vwData, 16))
      0002C6 96               [ 1]  569 	ldw	x, sp
      0002C7 1C 00 06         [ 2]  570 	addw	x, #6
      0002CA 51               [ 1]  571 	exgw	x, y
      0002CB 1E 0F            [ 2]  572 	ldw	x, (0x0f, sp)
      0002CD FE               [ 2]  573 	ldw	x, (x)
      0002CE 4B 10            [ 1]  574 	push	#0x10
      0002D0 4B 00            [ 1]  575 	push	#0x00
      0002D2 90 89            [ 2]  576 	pushw	y
      0002D4 CDr00r00         [ 4]  577 	call	_DecToLong
      0002D7 5D               [ 2]  578 	tnzw	x
      0002D8 26 0D            [ 1]  579 	jrne	00128$
                                    580 ;	stm8s_beep_main.c: 390: ccprintf(_DEBUG_CMD_A_, ("Illugal character is used.\r\n"));
      0002DA 4Br2E            [ 1]  581 	push	#<(__str_3+0)
      0002DC 4Bs00            [ 1]  582 	push	#((__str_3+0) >> 8)
      0002DE CDr00r00         [ 4]  583 	call	_mib_printf
      0002E1 5B 02            [ 2]  584 	addw	sp, #2
                                    585 ;	stm8s_beep_main.c: 391: return FALSE;
      0002E3 5F               [ 1]  586 	clrw	x
      0002E4 CCr04r77         [ 2]  587 	jp	00187$
      0002E7                        588 00128$:
                                    589 ;	stm8s_beep_main.c: 393: ccprintf(_DEBUG_CMD_A_, ("beep toggle : [%d] msec\r\n",(vwData)));		
      0002E7 1E 06            [ 2]  590 	ldw	x, (0x06, sp)
      0002E9 89               [ 2]  591 	pushw	x
      0002EA 4Br1F            [ 1]  592 	push	#<(__str_17+0)
      0002EC 4Bs01            [ 1]  593 	push	#((__str_17+0) >> 8)
      0002EE CDr00r00         [ 4]  594 	call	_mib_printf
      0002F1 5B 04            [ 2]  595 	addw	sp, #4
                                    596 ;	stm8s_beep_main.c: 394: gbDelayData = vwData;
      0002F3 7B 07            [ 1]  597 	ld	a, (0x07, sp)
      0002F5 C7u00u00         [ 1]  598 	ld	_gbDelayData+0, a
                                    599 ;	stm8s_beep_main.c: 396: GPIO_Configuration();		
      0002F8 CDr04r7D         [ 4]  600 	call	_GPIO_Configuration
                                    601 ;	stm8s_beep_main.c: 397: BEEP->CSR &= (uint8_t)(~BEEP_CSR_BEEPEN);
      0002FB 72 1B 50 F3      [ 1]  602 	bres	0x50f3, #5
                                    603 ;	stm8s_beep_main.c: 398: ccprintf(_DEBUG_CMD_A_, ("beep toggle....(0x%x)\r\n",BEEP->CSR));		
      0002FF C6 50 F3         [ 1]  604 	ld	a, 0x50f3
      000302 5F               [ 1]  605 	clrw	x
      000303 97               [ 1]  606 	ld	xl, a
      000304 89               [ 2]  607 	pushw	x
      000305 4Br39            [ 1]  608 	push	#<(__str_18+0)
      000307 4Bs01            [ 1]  609 	push	#((__str_18+0) >> 8)
      000309 CDr00r00         [ 4]  610 	call	_mib_printf
      00030C 5B 04            [ 2]  611 	addw	sp, #4
                                    612 ;	stm8s_beep_main.c: 400: if(UCOM_LED1_GPIO->IDR & UCOM_LED1_PIN)
      00030E C6 50 10         [ 1]  613 	ld	a, 0x5010
      000311 97               [ 1]  614 	ld	xl, a
                                    615 ;	stm8s_beep_main.c: 402: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR & ~UCOM_LED1_PIN;
      000312 C6 50 0F         [ 1]  616 	ld	a, 0x500f
                                    617 ;	stm8s_beep_main.c: 400: if(UCOM_LED1_GPIO->IDR & UCOM_LED1_PIN)
      000315 54               [ 2]  618 	srlw	x
      000316 24 07            [ 1]  619 	jrnc	00130$
                                    620 ;	stm8s_beep_main.c: 402: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR & ~UCOM_LED1_PIN;
      000318 A4 FE            [ 1]  621 	and	a, #0xfe
      00031A C7 50 0F         [ 1]  622 	ld	0x500f, a
      00031D 20 05            [ 2]  623 	jra	00131$
      00031F                        624 00130$:
                                    625 ;	stm8s_beep_main.c: 406: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR | UCOM_LED1_PIN;
      00031F AA 01            [ 1]  626 	or	a, #0x01
      000321 C7 50 0F         [ 1]  627 	ld	0x500f, a
      000324                        628 00131$:
                                    629 ;	stm8s_beep_main.c: 409: if(gbDelayData==0) gbDelayData = 10;
      000324 C6u00u00         [ 1]  630 	ld	a, _gbDelayData+0
      000327 26 04            [ 1]  631 	jrne	00133$
      000329 35 0Au00u00      [ 1]  632 	mov	_gbDelayData+0, #0x0a
      00032D                        633 00133$:
                                    634 ;	stm8s_beep_main.c: 410: gwMibMiliSec = gbDelayData;
      00032D 5F               [ 1]  635 	clrw	x
      00032E C6u00u00         [ 1]  636 	ld	a, _gbDelayData+0
      000331 97               [ 1]  637 	ld	xl, a
      000332 CFu00u00         [ 2]  638 	ldw	_gwMibMiliSec+0, x
                                    639 ;	stm8s_beep_main.c: 411: ccprintf(_DEBUG_CMD_A_, ("beep delay [%d]msec\r\n",gbDelayData));		
      000335 5F               [ 1]  640 	clrw	x
      000336 C6u00u00         [ 1]  641 	ld	a, _gbDelayData+0
      000339 97               [ 1]  642 	ld	xl, a
      00033A 89               [ 2]  643 	pushw	x
      00033B 4Br51            [ 1]  644 	push	#<(__str_19+0)
      00033D 4Bs01            [ 1]  645 	push	#((__str_19+0) >> 8)
      00033F CDr00r00         [ 4]  646 	call	_mib_printf
      000342 5B 04            [ 2]  647 	addw	sp, #4
                                    648 ;	stm8s_beep_main.c: 412: ccprintf(_DEBUG_CMD_A_, ("stop gpio key push : [%d]\r\n",(UCOM_KEY1_GPIO->IDR & UCOM_KEY1_PIN)));		
      000344 C6 50 06         [ 1]  649 	ld	a, 0x5006
      000347 A4 20            [ 1]  650 	and	a, #0x20
      000349 5F               [ 1]  651 	clrw	x
      00034A 97               [ 1]  652 	ld	xl, a
      00034B 89               [ 2]  653 	pushw	x
      00034C 4Br67            [ 1]  654 	push	#<(__str_20+0)
      00034E 4Bs01            [ 1]  655 	push	#((__str_20+0) >> 8)
      000350 CDr00r00         [ 4]  656 	call	_mib_printf
      000353 5B 04            [ 2]  657 	addw	sp, #4
                                    658 ;	stm8s_beep_main.c: 413: do {
      000355                        659 00144$:
                                    660 ;	stm8s_beep_main.c: 414: if(gwMibMiliSec==0)
      000355 CEu00u00         [ 2]  661 	ldw	x, _gwMibMiliSec+0
      000358 26 22            [ 1]  662 	jrne	00138$
                                    663 ;	stm8s_beep_main.c: 416: gwMibMiliSec = gbDelayData;
      00035A 5F               [ 1]  664 	clrw	x
      00035B C6u00u00         [ 1]  665 	ld	a, _gbDelayData+0
      00035E 97               [ 1]  666 	ld	xl, a
      00035F CFu00u00         [ 2]  667 	ldw	_gwMibMiliSec+0, x
                                    668 ;	stm8s_beep_main.c: 417: if(UCOM_BEEP_GPIO->IDR & UCOM_BEEP_PIN)
      000362 C6 50 10         [ 1]  669 	ld	a, 0x5010
      000365 97               [ 1]  670 	ld	xl, a
                                    671 ;	stm8s_beep_main.c: 402: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR & ~UCOM_LED1_PIN;
      000366 C6 50 0F         [ 1]  672 	ld	a, 0x500f
                                    673 ;	stm8s_beep_main.c: 417: if(UCOM_BEEP_GPIO->IDR & UCOM_BEEP_PIN)
      000369 88               [ 1]  674 	push	a
      00036A 9F               [ 1]  675 	ld	a, xl
      00036B A5 10            [ 1]  676 	bcp	a, #0x10
      00036D 84               [ 1]  677 	pop	a
      00036E 27 07            [ 1]  678 	jreq	00135$
                                    679 ;	stm8s_beep_main.c: 419: UCOM_BEEP_GPIO->ODR = UCOM_BEEP_GPIO->ODR & ~UCOM_BEEP_PIN;
      000370 A4 EF            [ 1]  680 	and	a, #0xef
      000372 C7 50 0F         [ 1]  681 	ld	0x500f, a
      000375 20 05            [ 2]  682 	jra	00138$
      000377                        683 00135$:
                                    684 ;	stm8s_beep_main.c: 423: UCOM_BEEP_GPIO->ODR = UCOM_BEEP_GPIO->ODR | UCOM_BEEP_PIN;
      000377 AA 10            [ 1]  685 	or	a, #0x10
      000379 C7 50 0F         [ 1]  686 	ld	0x500f, a
      00037C                        687 00138$:
                                    688 ;	stm8s_beep_main.c: 426: if(UCOM_LED1_GPIO->IDR & UCOM_LED1_PIN)
      00037C C6 50 10         [ 1]  689 	ld	a, 0x5010
      00037F 97               [ 1]  690 	ld	xl, a
                                    691 ;	stm8s_beep_main.c: 402: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR & ~UCOM_LED1_PIN;
      000380 C6 50 0F         [ 1]  692 	ld	a, 0x500f
                                    693 ;	stm8s_beep_main.c: 426: if(UCOM_LED1_GPIO->IDR & UCOM_LED1_PIN)
      000383 54               [ 2]  694 	srlw	x
      000384 24 07            [ 1]  695 	jrnc	00140$
                                    696 ;	stm8s_beep_main.c: 428: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR & ~UCOM_LED1_PIN;
      000386 A4 FE            [ 1]  697 	and	a, #0xfe
      000388 C7 50 0F         [ 1]  698 	ld	0x500f, a
      00038B 20 05            [ 2]  699 	jra	00141$
      00038D                        700 00140$:
                                    701 ;	stm8s_beep_main.c: 432: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR | UCOM_LED1_PIN;
      00038D AA 01            [ 1]  702 	or	a, #0x01
      00038F C7 50 0F         [ 1]  703 	ld	0x500f, a
      000392                        704 00141$:
                                    705 ;	stm8s_beep_main.c: 434: if((UCOM_KEY1_GPIO->IDR & UCOM_KEY1_PIN)==0)
      000392 72 0A 50 06 BE   [ 2]  706 	btjt	0x5006, #5, 00144$
                                    707 ;	stm8s_beep_main.c: 436: ccprintf(_DEBUG_CMD_A_, ("gpio key on [%d]\r\n",(UCOM_KEY1_GPIO->IDR & UCOM_KEY1_PIN)));		
      000397 C6 50 06         [ 1]  708 	ld	a, 0x5006
      00039A A4 20            [ 1]  709 	and	a, #0x20
      00039C 5F               [ 1]  710 	clrw	x
      00039D 97               [ 1]  711 	ld	xl, a
      00039E 89               [ 2]  712 	pushw	x
      00039F 4Br83            [ 1]  713 	push	#<(__str_21+0)
      0003A1 4Bs01            [ 1]  714 	push	#((__str_21+0) >> 8)
      0003A3 CDr00r00         [ 4]  715 	call	_mib_printf
      0003A6 5B 04            [ 2]  716 	addw	sp, #4
                                    717 ;	stm8s_beep_main.c: 437: break;
      0003A8 CCr04r75         [ 2]  718 	jp	00186$
                                    719 ;	stm8s_beep_main.c: 443: } while(1);
      0003AB                        720 00167$:
                                    721 ;	stm8s_beep_main.c: 448: else if (!strcmp(argv[1], "remap")) // _CMD_MY_READ_
      0003AB 1E 0C            [ 2]  722 	ldw	x, (0x0c, sp)
      0003AD FE               [ 2]  723 	ldw	x, (x)
      0003AE 4Br96            [ 1]  724 	push	#<(___str_22+0)
      0003B0 4Bs01            [ 1]  725 	push	#((___str_22+0) >> 8)
      0003B2 CDr00r00         [ 4]  726 	call	_strcmp
      0003B5 5D               [ 2]  727 	tnzw	x
      0003B6 27 03            [ 1]  728 	jreq	00395$
      0003B8 CCr04r46         [ 2]  729 	jp	00164$
      0003BB                        730 00395$:
                                    731 ;	stm8s_beep_main.c: 450: if (!strcmp(argv[2], "set"))
      0003BB 1E 0F            [ 2]  732 	ldw	x, (0x0f, sp)
      0003BD FE               [ 2]  733 	ldw	x, (x)
      0003BE 4Br9C            [ 1]  734 	push	#<(___str_23+0)
      0003C0 4Bs01            [ 1]  735 	push	#((___str_23+0) >> 8)
      0003C2 CDr00r00         [ 4]  736 	call	_strcmp
      0003C5 1F 12            [ 2]  737 	ldw	(0x12, sp), x
      0003C7 26 25            [ 1]  738 	jrne	00155$
                                    739 ;	stm8s_beep_main.c: 453: if(FLASH_ReadByte(OPT2_REG)!=AFR7_BIT) 
      0003C9 4B 03            [ 1]  740 	push	#0x03
      0003CB 4B 48            [ 1]  741 	push	#0x48
      0003CD 5F               [ 1]  742 	clrw	x
      0003CE 89               [ 2]  743 	pushw	x
      0003CF CDr00r00         [ 4]  744 	call	_FLASH_ReadByte
      0003D2 A1 80            [ 1]  745 	cp	a, #0x80
      0003D4 27 0D            [ 1]  746 	jreq	00148$
                                    747 ;	stm8s_beep_main.c: 455: FLASH_Unlock(FLASH_MEMTYPE_DATA); 
      0003D6 A6 F7            [ 1]  748 	ld	a, #0xf7
      0003D8 CDr00r00         [ 4]  749 	call	_FLASH_Unlock
                                    750 ;	stm8s_beep_main.c: 457: FLASH_ProgramOptionByte(OPT2_REG,AFR7_BIT); 
      0003DB A6 80            [ 1]  751 	ld	a, #0x80
      0003DD AE 48 03         [ 2]  752 	ldw	x, #0x4803
      0003E0 CDr00r00         [ 4]  753 	call	_FLASH_ProgramOptionByte
      0003E3                        754 00148$:
                                    755 ;	stm8s_beep_main.c: 459: vbData=FLASH_ReadOptionByte(OPT2_REG); 
      0003E3 AE 48 03         [ 2]  756 	ldw	x, #0x4803
      0003E6 CDr00r00         [ 4]  757 	call	_FLASH_ReadOptionByte
      0003E9 9F               [ 1]  758 	ld	a, xl
      0003EA 6B 05            [ 1]  759 	ld	(0x05, sp), a
      0003EC 20 39            [ 2]  760 	jra	00156$
      0003EE                        761 00155$:
                                    762 ;	stm8s_beep_main.c: 461: else if (!strcmp(argv[2], "reset"))
      0003EE 1E 0F            [ 2]  763 	ldw	x, (0x0f, sp)
      0003F0 FE               [ 2]  764 	ldw	x, (x)
      0003F1 4BrA0            [ 1]  765 	push	#<(___str_24+0)
      0003F3 4Bs01            [ 1]  766 	push	#((___str_24+0) >> 8)
      0003F5 CDr00r00         [ 4]  767 	call	_strcmp
      0003F8 5D               [ 2]  768 	tnzw	x
      0003F9 26 23            [ 1]  769 	jrne	00152$
                                    770 ;	stm8s_beep_main.c: 464: if(FLASH_ReadByte(OPT2_REG)!=0x00) 
      0003FB 4B 03            [ 1]  771 	push	#0x03
      0003FD 4B 48            [ 1]  772 	push	#0x48
      0003FF 5F               [ 1]  773 	clrw	x
      000400 89               [ 2]  774 	pushw	x
      000401 CDr00r00         [ 4]  775 	call	_FLASH_ReadByte
      000404 4D               [ 1]  776 	tnz	a
      000405 27 0C            [ 1]  777 	jreq	00150$
                                    778 ;	stm8s_beep_main.c: 466: FLASH_Unlock(FLASH_MEMTYPE_DATA); 
      000407 A6 F7            [ 1]  779 	ld	a, #0xf7
      000409 CDr00r00         [ 4]  780 	call	_FLASH_Unlock
                                    781 ;	stm8s_beep_main.c: 468: FLASH_ProgramOptionByte(OPT2_REG,0x00); 
      00040C 4F               [ 1]  782 	clr	a
      00040D AE 48 03         [ 2]  783 	ldw	x, #0x4803
      000410 CDr00r00         [ 4]  784 	call	_FLASH_ProgramOptionByte
      000413                        785 00150$:
                                    786 ;	stm8s_beep_main.c: 470: vbData=FLASH_ReadOptionByte(OPT2_REG); 
      000413 AE 48 03         [ 2]  787 	ldw	x, #0x4803
      000416 CDr00r00         [ 4]  788 	call	_FLASH_ReadOptionByte
      000419 9F               [ 1]  789 	ld	a, xl
      00041A 6B 05            [ 1]  790 	ld	(0x05, sp), a
      00041C 20 09            [ 2]  791 	jra	00156$
      00041E                        792 00152$:
                                    793 ;	stm8s_beep_main.c: 474: ccprintf(_DEBUG_CMD_A_, ("beep init....error !!!\r\n"));		
      00041E 4BrA6            [ 1]  794 	push	#<(__str_25+0)
      000420 4Bs01            [ 1]  795 	push	#((__str_25+0) >> 8)
      000422 CDr00r00         [ 4]  796 	call	_mib_printf
      000425 5B 02            [ 2]  797 	addw	sp, #2
      000427                        798 00156$:
                                    799 ;	stm8s_beep_main.c: 477: ccprintf(_DEBUG_CMD_A_, ("beep init....(0x%02X)\r\n",vbData));		
      000427 5F               [ 1]  800 	clrw	x
      000428 7B 05            [ 1]  801 	ld	a, (0x05, sp)
      00042A 97               [ 1]  802 	ld	xl, a
      00042B 89               [ 2]  803 	pushw	x
      00042C 4BrBF            [ 1]  804 	push	#<(__str_26+0)
      00042E 4Bs01            [ 1]  805 	push	#((__str_26+0) >> 8)
      000430 CDr00r00         [ 4]  806 	call	_mib_printf
      000433 5B 04            [ 2]  807 	addw	sp, #4
                                    808 ;	stm8s_beep_main.c: 478: ccprintf(_DEBUG_CMD_A_, ("beep AFR7....(0x%x)\r\n",rd_ADDR8(OPT2_REG)));		
      000435 C6 48 03         [ 1]  809 	ld	a, 0x4803
      000438 5F               [ 1]  810 	clrw	x
      000439 97               [ 1]  811 	ld	xl, a
      00043A 89               [ 2]  812 	pushw	x
      00043B 4BrD7            [ 1]  813 	push	#<(__str_27+0)
      00043D 4Bs01            [ 1]  814 	push	#((__str_27+0) >> 8)
      00043F CDr00r00         [ 4]  815 	call	_mib_printf
      000442 5B 04            [ 2]  816 	addw	sp, #4
      000444 20 2F            [ 2]  817 	jra	00186$
      000446                        818 00164$:
                                    819 ;	stm8s_beep_main.c: 483: else if (!strcmp(argv[1], "init")) // _CMD_MY_READ_
      000446 1E 0C            [ 2]  820 	ldw	x, (0x0c, sp)
      000448 FE               [ 2]  821 	ldw	x, (x)
      000449 4BrED            [ 1]  822 	push	#<(___str_28+0)
      00044B 4Bs01            [ 1]  823 	push	#((___str_28+0) >> 8)
      00044D CDr00r00         [ 4]  824 	call	_strcmp
      000450 5D               [ 2]  825 	tnzw	x
      000451 26 05            [ 1]  826 	jrne	00161$
                                    827 ;	stm8s_beep_main.c: 485: GPIO_Configuration();		
      000453 CDr04r7D         [ 4]  828 	call	_GPIO_Configuration
      000456 20 1D            [ 2]  829 	jra	00186$
      000458                        830 00161$:
                                    831 ;	stm8s_beep_main.c: 490: else if (!strcmp(argv[1], "help")) // _CMD_MY_READ_
      000458 1E 0C            [ 2]  832 	ldw	x, (0x0c, sp)
      00045A FE               [ 2]  833 	ldw	x, (x)
      00045B 4BrF2            [ 1]  834 	push	#<(___str_29+0)
      00045D 4Bs01            [ 1]  835 	push	#((___str_29+0) >> 8)
      00045F CDr00r00         [ 4]  836 	call	_strcmp
      000462 5D               [ 2]  837 	tnzw	x
      000463 26 08            [ 1]  838 	jrne	00158$
                                    839 ;	stm8s_beep_main.c: 493: "beep init // gpio init\r\n"\
      000465 AEr01rF7         [ 2]  840 	ldw	x, #(___str_30+0)
      000468 CDr00r00         [ 4]  841 	call	_MibWriteDebugString
      00046B 20 08            [ 2]  842 	jra	00186$
      00046D                        843 00158$:
                                    844 ;	stm8s_beep_main.c: 506: MibWriteDebugString(cptr->usage);
      00046D 1E 0A            [ 2]  845 	ldw	x, (0x0a, sp)
      00046F FE               [ 2]  846 	ldw	x, (x)
      000470 CDr00r00         [ 4]  847 	call	_MibWriteDebugString
                                    848 ;	stm8s_beep_main.c: 507: return FALSE;
      000473 5F               [ 1]  849 	clrw	x
                                    850 ;	stm8s_beep_main.c: 509: return TRUE;
      000474 C5                     851 	.byte 0xc5
      000475                        852 00186$:
      000475 5F               [ 1]  853 	clrw	x
      000476 5C               [ 1]  854 	incw	x
      000477                        855 00187$:
                                    856 ;	stm8s_beep_main.c: 510: }
      000477 16 14            [ 2]  857 	ldw	y, (20, sp)
      000479 5B 19            [ 2]  858 	addw	sp, #25
      00047B 90 FC            [ 2]  859 	jp	(y)
                                    860 ;	stm8s_beep_main.c: 534: void GPIO_Configuration(void)
                                    861 ;	-----------------------------------------
                                    862 ;	 function GPIO_Configuration
                                    863 ;	-----------------------------------------
      00047D                        864 _GPIO_Configuration:
                                    865 ;	stm8s_beep_main.c: 549: UCOM_LED1_GPIO->DDR |= (UCOM_LED1_PIN); /* Set Output mode */
      00047D 72 10 50 11      [ 1]  866 	bset	0x5011, #0
                                    867 ;	stm8s_beep_main.c: 550: UCOM_LED1_GPIO->CR1 |= (UCOM_LED1_PIN);	/* Pull-Up or Push-Pull */
      000481 72 10 50 12      [ 1]  868 	bset	0x5012, #0
                                    869 ;	stm8s_beep_main.c: 551: UCOM_LED1_GPIO->CR2 |= (UCOM_LED1_PIN);	/* Output speed up to 10 MHz */
      000485 72 10 50 13      [ 1]  870 	bset	0x5013, #0
                                    871 ;	stm8s_beep_main.c: 552: UCOM_LED1_GPIO->ODR &= ~(UCOM_LED1_PIN); // low... 
      000489 72 11 50 0F      [ 1]  872 	bres	0x500f, #0
                                    873 ;	stm8s_beep_main.c: 557: UCOM_KEY1_GPIO->DDR &= ~(UCOM_KEY1_PIN);  /* Set input mode */
      00048D 72 1B 50 07      [ 1]  874 	bres	0x5007, #5
                                    875 ;	stm8s_beep_main.c: 558: UCOM_KEY1_GPIO->CR1 |= (UCOM_KEY1_PIN);	 /* Pull-Up or Push-Pull */
      000491 72 1A 50 08      [ 1]  876 	bset	0x5008, #5
                                    877 ;	stm8s_beep_main.c: 559: UCOM_KEY1_GPIO->CR2 &= ~(UCOM_KEY1_PIN); /*  External interrupt disabled */
      000495 72 1B 50 09      [ 1]  878 	bres	0x5009, #5
                                    879 ;	stm8s_beep_main.c: 567: UCOM_BEEP_GPIO->DDR |= (UCOM_BEEP_PIN); /* Set Output mode */
      000499 72 18 50 11      [ 1]  880 	bset	0x5011, #4
                                    881 ;	stm8s_beep_main.c: 568: UCOM_BEEP_GPIO->CR1 |= (UCOM_BEEP_PIN);	/* Pull-Up or Push-Pull */
      00049D 72 18 50 12      [ 1]  882 	bset	0x5012, #4
                                    883 ;	stm8s_beep_main.c: 569: UCOM_BEEP_GPIO->CR2 |= (UCOM_BEEP_PIN);	/* Output speed up to 10 MHz */
      0004A1 72 18 50 13      [ 1]  884 	bset	0x5013, #4
                                    885 ;	stm8s_beep_main.c: 570: UCOM_BEEP_GPIO->ODR &= ~(UCOM_BEEP_PIN); // low... 
      0004A5 72 19 50 0F      [ 1]  886 	bres	0x500f, #4
                                    887 ;	stm8s_beep_main.c: 572: }
      0004A9 81               [ 4]  888 	ret
                                    889 ;	stm8s_beep_main.c: 576: void calConfigBEEP_test(uint16_t vwFreq) // msec... 
                                    890 ;	-----------------------------------------
                                    891 ;	 function calConfigBEEP_test
                                    892 ;	-----------------------------------------
      0004AA                        893 _calConfigBEEP_test:
      0004AA 52 07            [ 2]  894 	sub	sp, #7
      0004AC 51               [ 1]  895 	exgw	x, y
                                    896 ;	stm8s_beep_main.c: 579: uint8_t vbBEEPDIV = 0;
      0004AD 0F 05            [ 1]  897 	clr	(0x05, sp)
                                    898 ;	stm8s_beep_main.c: 580: uint32_t vdwData = vwFreq;
      0004AF 17 03            [ 2]  899 	ldw	(0x03, sp), y
      0004B1 5F               [ 1]  900 	clrw	x
      0004B2 1F 01            [ 2]  901 	ldw	(0x01, sp), x
                                    902 ;	stm8s_beep_main.c: 583: if(vwFreq<500)
      0004B4 17 06            [ 2]  903 	ldw	(0x06, sp), y
      0004B6 93               [ 1]  904 	ldw	x, y
      0004B7 A3 01 F4         [ 2]  905 	cpw	x, #0x01f4
      0004BA 24 07            [ 1]  906 	jrnc	00111$
                                    907 ;	stm8s_beep_main.c: 586: vbBEEPSEL = 0xFF;
      0004BC A6 FF            [ 1]  908 	ld	a, #0xff
      0004BE 6B 06            [ 1]  909 	ld	(0x06, sp), a
      0004C0 CCr05r44         [ 2]  910 	jp	00112$
      0004C3                        911 00111$:
                                    912 ;	stm8s_beep_main.c: 588: else if(vwFreq<1000)
      0004C3 1E 06            [ 2]  913 	ldw	x, (0x06, sp)
      0004C5 A3 03 E8         [ 2]  914 	cpw	x, #0x03e8
      0004C8 24 20            [ 1]  915 	jrnc	00108$
                                    916 ;	stm8s_beep_main.c: 590: vbBEEPSEL = 0x00; // f / (8 * div) khz
      0004CA 0F 06            [ 1]  917 	clr	(0x06, sp)
                                    918 ;	stm8s_beep_main.c: 591: vdwDiv = (128000 / 8) / vdwData;
      0004CC 90 89            [ 2]  919 	pushw	y
      0004CE 1E 05            [ 2]  920 	ldw	x, (0x05, sp)
      0004D0 89               [ 2]  921 	pushw	x
      0004D1 1E 05            [ 2]  922 	ldw	x, (0x05, sp)
      0004D3 89               [ 2]  923 	pushw	x
      0004D4 4B 80            [ 1]  924 	push	#0x80
      0004D6 4B 3E            [ 1]  925 	push	#0x3e
      0004D8 5F               [ 1]  926 	clrw	x
      0004D9 89               [ 2]  927 	pushw	x
      0004DA CDr00r00         [ 4]  928 	call	__divulong
      0004DD 5B 08            [ 2]  929 	addw	sp, #8
      0004DF 17 04            [ 2]  930 	ldw	(0x04, sp), y
      0004E1 9F               [ 1]  931 	ld	a, xl
      0004E2 90 85            [ 2]  932 	popw	y
                                    933 ;	stm8s_beep_main.c: 592: vbBEEPDIV =  vdwDiv - 2;
      0004E4 A0 02            [ 1]  934 	sub	a, #0x02
      0004E6 6B 05            [ 1]  935 	ld	(0x05, sp), a
                                    936 ;	stm8s_beep_main.c: 593: vdwDataLast = (128000 / 8) / vdwDiv;
      0004E8 20 5A            [ 2]  937 	jra	00112$
      0004EA                        938 00108$:
                                    939 ;	stm8s_beep_main.c: 595: else if(vwFreq<2000)
      0004EA 1E 06            [ 2]  940 	ldw	x, (0x06, sp)
      0004EC A3 07 D0         [ 2]  941 	cpw	x, #0x07d0
      0004EF 24 22            [ 1]  942 	jrnc	00105$
                                    943 ;	stm8s_beep_main.c: 597: vbBEEPSEL = 0x01; // f / (4 * div) khz
      0004F1 A6 01            [ 1]  944 	ld	a, #0x01
      0004F3 6B 06            [ 1]  945 	ld	(0x06, sp), a
                                    946 ;	stm8s_beep_main.c: 598: vdwDiv = (128000 / 4) / vdwData;
      0004F5 90 89            [ 2]  947 	pushw	y
      0004F7 1E 05            [ 2]  948 	ldw	x, (0x05, sp)
      0004F9 89               [ 2]  949 	pushw	x
      0004FA 1E 05            [ 2]  950 	ldw	x, (0x05, sp)
      0004FC 89               [ 2]  951 	pushw	x
      0004FD 4B 00            [ 1]  952 	push	#0x00
      0004FF 4B 7D            [ 1]  953 	push	#0x7d
      000501 5F               [ 1]  954 	clrw	x
      000502 89               [ 2]  955 	pushw	x
      000503 CDr00r00         [ 4]  956 	call	__divulong
      000506 5B 08            [ 2]  957 	addw	sp, #8
      000508 17 04            [ 2]  958 	ldw	(0x04, sp), y
      00050A 9F               [ 1]  959 	ld	a, xl
      00050B 90 85            [ 2]  960 	popw	y
                                    961 ;	stm8s_beep_main.c: 599: vbBEEPDIV =  vdwDiv - 2;
      00050D A0 02            [ 1]  962 	sub	a, #0x02
      00050F 6B 05            [ 1]  963 	ld	(0x05, sp), a
                                    964 ;	stm8s_beep_main.c: 600: vdwDataLast = (128000 / 8) / vdwDiv;
      000511 20 31            [ 2]  965 	jra	00112$
      000513                        966 00105$:
                                    967 ;	stm8s_beep_main.c: 602: else if(vwFreq<32000)
      000513 1E 06            [ 2]  968 	ldw	x, (0x06, sp)
      000515 A3 7D 00         [ 2]  969 	cpw	x, #0x7d00
      000518 24 26            [ 1]  970 	jrnc	00102$
                                    971 ;	stm8s_beep_main.c: 604: vbBEEPSEL = 0x02; // f / (2 * div) khz
      00051A A6 02            [ 1]  972 	ld	a, #0x02
      00051C 6B 06            [ 1]  973 	ld	(0x06, sp), a
                                    974 ;	stm8s_beep_main.c: 605: vdwDiv = (128000 / 2) / vdwData;
      00051E 90 89            [ 2]  975 	pushw	y
      000520 1E 05            [ 2]  976 	ldw	x, (0x05, sp)
      000522 89               [ 2]  977 	pushw	x
      000523 1E 05            [ 2]  978 	ldw	x, (0x05, sp)
      000525 89               [ 2]  979 	pushw	x
      000526 4B 00            [ 1]  980 	push	#0x00
      000528 4B FA            [ 1]  981 	push	#0xfa
      00052A 5F               [ 1]  982 	clrw	x
      00052B 89               [ 2]  983 	pushw	x
      00052C CDr00r00         [ 4]  984 	call	__divulong
      00052F 5B 08            [ 2]  985 	addw	sp, #8
      000531 02               [ 1]  986 	rlwa	x
      000532 6B 06            [ 1]  987 	ld	(0x06, sp), a
      000534 01               [ 1]  988 	rrwa	x
      000535 17 04            [ 2]  989 	ldw	(0x04, sp), y
      000537 9F               [ 1]  990 	ld	a, xl
      000538 90 85            [ 2]  991 	popw	y
                                    992 ;	stm8s_beep_main.c: 606: vbBEEPDIV =  vdwDiv - 2;
      00053A A0 02            [ 1]  993 	sub	a, #0x02
      00053C 6B 05            [ 1]  994 	ld	(0x05, sp), a
                                    995 ;	stm8s_beep_main.c: 607: vdwDataLast = (128000 / 8) / vdwDiv;
      00053E 20 04            [ 2]  996 	jra	00112$
      000540                        997 00102$:
                                    998 ;	stm8s_beep_main.c: 612: vbBEEPSEL = 0xFF;
      000540 A6 FF            [ 1]  999 	ld	a, #0xff
      000542 6B 06            [ 1] 1000 	ld	(0x06, sp), a
      000544                       1001 00112$:
                                   1002 ;	stm8s_beep_main.c: 614: if(vbBEEPSEL!=0xFF)
      000544 7B 06            [ 1] 1003 	ld	a, (0x06, sp)
      000546 4C               [ 1] 1004 	inc	a
      000547 27 50            [ 1] 1005 	jreq	00114$
                                   1006 ;	stm8s_beep_main.c: 616: ccprintf(_DEBUG_CMD_A_, ("beep init [%d : SEL(%d) : DIV(%d)] Hz\r\n",vwFreq,vbBEEPSEL,vbBEEPDIV));		
      000549 5F               [ 1] 1007 	clrw	x
      00054A 7B 05            [ 1] 1008 	ld	a, (0x05, sp)
      00054C 97               [ 1] 1009 	ld	xl, a
      00054D 7B 06            [ 1] 1010 	ld	a, (0x06, sp)
      00054F 6B 04            [ 1] 1011 	ld	(0x04, sp), a
      000551 0F 03            [ 1] 1012 	clr	(0x03, sp)
      000553 89               [ 2] 1013 	pushw	x
      000554 1E 05            [ 2] 1014 	ldw	x, (0x05, sp)
      000556 89               [ 2] 1015 	pushw	x
      000557 90 89            [ 2] 1016 	pushw	y
      000559 4Br49            [ 1] 1017 	push	#<(__str_31+0)
      00055B 4Bs03            [ 1] 1018 	push	#((__str_31+0) >> 8)
      00055D CDr00r00         [ 4] 1019 	call	_mib_printf
      000560 5B 08            [ 2] 1020 	addw	sp, #8
                                   1021 ;	stm8s_beep_main.c: 619: BEEP->CSR  = BEEP_CSR_BEEPDIV;
      000562 35 1F 50 F3      [ 1] 1022 	mov	0x50f3+0, #0x1f
                                   1023 ;	stm8s_beep_main.c: 621: BEEP->CSR &= (uint8_t)(~BEEP_CSR_BEEPDIV); /* Clear bits */
      000566 C6 50 F3         [ 1] 1024 	ld	a, 0x50f3
      000569 A4 E0            [ 1] 1025 	and	a, #0xe0
      00056B C7 50 F3         [ 1] 1026 	ld	0x50f3, a
                                   1027 ;	stm8s_beep_main.c: 622: BEEP->CSR |= (vbBEEPDIV & BEEP_CSR_BEEPDIV);
      00056E C6 50 F3         [ 1] 1028 	ld	a, 0x50f3
      000571 6B 07            [ 1] 1029 	ld	(0x07, sp), a
      000573 7B 05            [ 1] 1030 	ld	a, (0x05, sp)
      000575 A4 1F            [ 1] 1031 	and	a, #0x1f
      000577 1A 07            [ 1] 1032 	or	a, (0x07, sp)
      000579 C7 50 F3         [ 1] 1033 	ld	0x50f3, a
                                   1034 ;	stm8s_beep_main.c: 626: BEEP->CSR &= (uint8_t)(~BEEP_CSR_BEEPSEL);
      00057C C6 50 F3         [ 1] 1035 	ld	a, 0x50f3
      00057F A4 3F            [ 1] 1036 	and	a, #0x3f
      000581 C7 50 F3         [ 1] 1037 	ld	0x50f3, a
                                   1038 ;	stm8s_beep_main.c: 627: BEEP->CSR |= (uint8_t)((vbBEEPSEL&0x03)<<6);
      000584 C6 50 F3         [ 1] 1039 	ld	a, 0x50f3
      000587 6B 07            [ 1] 1040 	ld	(0x07, sp), a
      000589 7B 06            [ 1] 1041 	ld	a, (0x06, sp)
      00058B A4 03            [ 1] 1042 	and	a, #0x03
      00058D 4E               [ 1] 1043 	swap	a
      00058E A4 F0            [ 1] 1044 	and	a, #0xf0
      000590 48               [ 1] 1045 	sll	a
      000591 48               [ 1] 1046 	sll	a
      000592 1A 07            [ 1] 1047 	or	a, (0x07, sp)
      000594 C7 50 F3         [ 1] 1048 	ld	0x50f3, a
      000597 20 0F            [ 2] 1049 	jra	00116$
      000599                       1050 00114$:
                                   1051 ;	stm8s_beep_main.c: 632: BEEP->CSR  = BEEP_CSR_BEEPDIV;
      000599 35 1F 50 F3      [ 1] 1052 	mov	0x50f3+0, #0x1f
                                   1053 ;	stm8s_beep_main.c: 633: ccprintf(_DEBUG_CMD_A_, ("beep init error... [%d] Hz\r\n",vwFreq));		
      00059D 90 89            [ 2] 1054 	pushw	y
      00059F 4Br71            [ 1] 1055 	push	#<(__str_32+0)
      0005A1 4Bs03            [ 1] 1056 	push	#((__str_32+0) >> 8)
      0005A3 CDr00r00         [ 4] 1057 	call	_mib_printf
      0005A6 5B 04            [ 2] 1058 	addw	sp, #4
      0005A8                       1059 00116$:
                                   1060 ;	stm8s_beep_main.c: 635: }
      0005A8 5B 07            [ 2] 1061 	addw	sp, #7
      0005AA 81               [ 4] 1062 	ret
                                   1063 ;	stm8s_beep_main.c: 645: void Delay(u16 nCount)
                                   1064 ;	-----------------------------------------
                                   1065 ;	 function Delay
                                   1066 ;	-----------------------------------------
      0005AB                       1067 _Delay:
                                   1068 ;	stm8s_beep_main.c: 648: while (nCount != 0)
      0005AB                       1069 00101$:
      0005AB 5D               [ 2] 1070 	tnzw	x
      0005AC 26 01            [ 1] 1071 	jrne	00117$
      0005AE 81               [ 4] 1072 	ret
      0005AF                       1073 00117$:
                                   1074 ;	stm8s_beep_main.c: 650: nCount--;
      0005AF 5A               [ 2] 1075 	decw	x
      0005B0 20 F9            [ 2] 1076 	jra	00101$
                                   1077 ;	stm8s_beep_main.c: 652: }
      0005B2 81               [ 4] 1078 	ret
                                   1079 	.area CODE
                                   1080 	.area CONST
                                   1081 	.area CONST
      000000                       1082 __str_0:
      000000 49 4E 46 4F 3A 2B 63  1083 	.ascii "INFO:+cmd_beep..."
             6D 64 5F 62 65 65 70
             2E 2E 2E
      000011 0D                    1084 	.db 0x0d
      000012 0A                    1085 	.db 0x0a
      000013 00                    1086 	.db 0x00
                                   1087 	.area CODE
                                   1088 	.area CONST
      000014                       1089 __str_1:
      000014 49 4E 46 4F 3A 2D 63  1090 	.ascii "INFO:-cmd_beep..."
             6D 64 5F 62 65 65 70
             2E 2E 2E
      000025 0D                    1091 	.db 0x0d
      000026 0A                    1092 	.db 0x0a
      000027 00                    1093 	.db 0x00
                                   1094 	.area CODE
                                   1095 	.area CONST
      000028                       1096 ___str_2:
      000028 77 72 69 74 65        1097 	.ascii "write"
      00002D 00                    1098 	.db 0x00
                                   1099 	.area CODE
                                   1100 	.area CONST
      00002E                       1101 __str_3:
      00002E 49 6C 6C 75 67 61 6C  1102 	.ascii "Illugal character is used."
             20 63 68 61 72 61 63
             74 65 72 20 69 73 20
             75 73 65 64 2E
      000048 0D                    1103 	.db 0x0d
      000049 0A                    1104 	.db 0x0a
      00004A 00                    1105 	.db 0x00
                                   1106 	.area CODE
                                   1107 	.area CONST
      00004B                       1108 __str_4:
      00004B 77 72 5F 41 44 44 52  1109 	.ascii "wr_ADDR8 : 0x%08lx[0x%02x]"
             38 20 3A 20 30 78 25
             30 38 6C 78 5B 30 78
             25 30 32 78 5D
      000065 0D                    1110 	.db 0x0d
      000066 0A                    1111 	.db 0x0a
      000067 00                    1112 	.db 0x00
                                   1113 	.area CODE
                                   1114 	.area CONST
      000068                       1115 ___str_5:
      000068 72 65 61 64           1116 	.ascii "read"
      00006C 00                    1117 	.db 0x00
                                   1118 	.area CODE
                                   1119 	.area CONST
      00006D                       1120 __str_6:
      00006D 72 64 5F 41 44 44 52  1121 	.ascii "rd_ADDR8 : 0x%08lx[0x%02x]"
             38 20 3A 20 30 78 25
             30 38 6C 78 5B 30 78
             25 30 32 78 5D
      000087 0D                    1122 	.db 0x0d
      000088 0A                    1123 	.db 0x0a
      000089 00                    1124 	.db 0x00
                                   1125 	.area CODE
                                   1126 	.area CONST
      00008A                       1127 ___str_7:
      00008A 66 72 65 71           1128 	.ascii "freq"
      00008E 00                    1129 	.db 0x00
                                   1130 	.area CODE
                                   1131 	.area CONST
      00008F                       1132 __str_8:
      00008F 62 65 65 70 20 66 72  1133 	.ascii "beep freq : [%d] Hz"
             65 71 20 3A 20 5B 25
             64 5D 20 48 7A
      0000A2 0D                    1134 	.db 0x0d
      0000A3 0A                    1135 	.db 0x0a
      0000A4 00                    1136 	.db 0x00
                                   1137 	.area CODE
                                   1138 	.area CONST
      0000A5                       1139 ___str_9:
      0000A5 65 6E 61 62 6C 65     1140 	.ascii "enable"
      0000AB 00                    1141 	.db 0x00
                                   1142 	.area CODE
                                   1143 	.area CONST
      0000AC                       1144 __str_10:
      0000AC 62 65 65 70 20 65 6E  1145 	.ascii "beep enable....(0x%x)"
             61 62 6C 65 2E 2E 2E
             2E 28 30 78 25 78 29
      0000C1 0D                    1146 	.db 0x0d
      0000C2 0A                    1147 	.db 0x0a
      0000C3 00                    1148 	.db 0x00
                                   1149 	.area CODE
                                   1150 	.area CONST
      0000C4                       1151 ___str_11:
      0000C4 64 69 73 61 62 6C 65  1152 	.ascii "disable"
      0000CB 00                    1153 	.db 0x00
                                   1154 	.area CODE
                                   1155 	.area CONST
      0000CC                       1156 __str_12:
      0000CC 62 65 65 70 20 64 69  1157 	.ascii "beep disable....(0x%x)"
             73 61 62 6C 65 2E 2E
             2E 2E 28 30 78 25 78
             29
      0000E2 0D                    1158 	.db 0x0d
      0000E3 0A                    1159 	.db 0x0a
      0000E4 00                    1160 	.db 0x00
                                   1161 	.area CODE
                                   1162 	.area CONST
      0000E5                       1163 ___str_13:
      0000E5 73 74 61 72 74        1164 	.ascii "start"
      0000EA 00                    1165 	.db 0x00
                                   1166 	.area CODE
                                   1167 	.area CONST
      0000EB                       1168 __str_14:
      0000EB 62 65 65 70 20 66 72  1169 	.ascii "beep freq : [%d]Hz"
             65 71 20 3A 20 5B 25
             64 5D 48 7A
      0000FD 0D                    1170 	.db 0x0d
      0000FE 0A                    1171 	.db 0x0a
      0000FF 00                    1172 	.db 0x00
                                   1173 	.area CODE
                                   1174 	.area CONST
      000100                       1175 __str_15:
      000100 62 65 65 70 20 64 65  1176 	.ascii "beep delay : [%d]msec"
             6C 61 79 20 3A 20 5B
             25 64 5D 6D 73 65 63
      000115 0D                    1177 	.db 0x0d
      000116 0A                    1178 	.db 0x0a
      000117 00                    1179 	.db 0x00
                                   1180 	.area CODE
                                   1181 	.area CONST
      000118                       1182 ___str_16:
      000118 74 6F 67 67 6C 65     1183 	.ascii "toggle"
      00011E 00                    1184 	.db 0x00
                                   1185 	.area CODE
                                   1186 	.area CONST
      00011F                       1187 __str_17:
      00011F 62 65 65 70 20 74 6F  1188 	.ascii "beep toggle : [%d] msec"
             67 67 6C 65 20 3A 20
             5B 25 64 5D 20 6D 73
             65 63
      000136 0D                    1189 	.db 0x0d
      000137 0A                    1190 	.db 0x0a
      000138 00                    1191 	.db 0x00
                                   1192 	.area CODE
                                   1193 	.area CONST
      000139                       1194 __str_18:
      000139 62 65 65 70 20 74 6F  1195 	.ascii "beep toggle....(0x%x)"
             67 67 6C 65 2E 2E 2E
             2E 28 30 78 25 78 29
      00014E 0D                    1196 	.db 0x0d
      00014F 0A                    1197 	.db 0x0a
      000150 00                    1198 	.db 0x00
                                   1199 	.area CODE
                                   1200 	.area CONST
      000151                       1201 __str_19:
      000151 62 65 65 70 20 64 65  1202 	.ascii "beep delay [%d]msec"
             6C 61 79 20 5B 25 64
             5D 6D 73 65 63
      000164 0D                    1203 	.db 0x0d
      000165 0A                    1204 	.db 0x0a
      000166 00                    1205 	.db 0x00
                                   1206 	.area CODE
                                   1207 	.area CONST
      000167                       1208 __str_20:
      000167 73 74 6F 70 20 67 70  1209 	.ascii "stop gpio key push : [%d]"
             69 6F 20 6B 65 79 20
             70 75 73 68 20 3A 20
             5B 25 64 5D
      000180 0D                    1210 	.db 0x0d
      000181 0A                    1211 	.db 0x0a
      000182 00                    1212 	.db 0x00
                                   1213 	.area CODE
                                   1214 	.area CONST
      000183                       1215 __str_21:
      000183 67 70 69 6F 20 6B 65  1216 	.ascii "gpio key on [%d]"
             79 20 6F 6E 20 5B 25
             64 5D
      000193 0D                    1217 	.db 0x0d
      000194 0A                    1218 	.db 0x0a
      000195 00                    1219 	.db 0x00
                                   1220 	.area CODE
                                   1221 	.area CONST
      000196                       1222 ___str_22:
      000196 72 65 6D 61 70        1223 	.ascii "remap"
      00019B 00                    1224 	.db 0x00
                                   1225 	.area CODE
                                   1226 	.area CONST
      00019C                       1227 ___str_23:
      00019C 73 65 74              1228 	.ascii "set"
      00019F 00                    1229 	.db 0x00
                                   1230 	.area CODE
                                   1231 	.area CONST
      0001A0                       1232 ___str_24:
      0001A0 72 65 73 65 74        1233 	.ascii "reset"
      0001A5 00                    1234 	.db 0x00
                                   1235 	.area CODE
                                   1236 	.area CONST
      0001A6                       1237 __str_25:
      0001A6 62 65 65 70 20 69 6E  1238 	.ascii "beep init....error !!!"
             69 74 2E 2E 2E 2E 65
             72 72 6F 72 20 21 21
             21
      0001BC 0D                    1239 	.db 0x0d
      0001BD 0A                    1240 	.db 0x0a
      0001BE 00                    1241 	.db 0x00
                                   1242 	.area CODE
                                   1243 	.area CONST
      0001BF                       1244 __str_26:
      0001BF 62 65 65 70 20 69 6E  1245 	.ascii "beep init....(0x%02X)"
             69 74 2E 2E 2E 2E 28
             30 78 25 30 32 58 29
      0001D4 0D                    1246 	.db 0x0d
      0001D5 0A                    1247 	.db 0x0a
      0001D6 00                    1248 	.db 0x00
                                   1249 	.area CODE
                                   1250 	.area CONST
      0001D7                       1251 __str_27:
      0001D7 62 65 65 70 20 41 46  1252 	.ascii "beep AFR7....(0x%x)"
             52 37 2E 2E 2E 2E 28
             30 78 25 78 29
      0001EA 0D                    1253 	.db 0x0d
      0001EB 0A                    1254 	.db 0x0a
      0001EC 00                    1255 	.db 0x00
                                   1256 	.area CODE
                                   1257 	.area CONST
      0001ED                       1258 ___str_28:
      0001ED 69 6E 69 74           1259 	.ascii "init"
      0001F1 00                    1260 	.db 0x00
                                   1261 	.area CODE
                                   1262 	.area CONST
      0001F2                       1263 ___str_29:
      0001F2 68 65 6C 70           1264 	.ascii "help"
      0001F6 00                    1265 	.db 0x00
                                   1266 	.area CODE
                                   1267 	.area CONST
      0001F7                       1268 ___str_30:
      0001F7 62 65 65 70 20 68 65  1269 	.ascii "beep help...."
             6C 70 2E 2E 2E 2E
      000204 09                    1270 	.db 0x09
      000205 0D                    1271 	.db 0x0d
      000206 0A                    1272 	.db 0x0a
      000207 62 65 65 70 20 69 6E  1273 	.ascii "beep init // gpio init"
             69 74 20 2F 2F 20 67
             70 69 6F 20 69 6E 69
             74
      00021D 0D                    1274 	.db 0x0d
      00021E 0A                    1275 	.db 0x0a
      00021F 62 65 65 70 20 72 65  1276 	.ascii "beep remap set // beep pin remap"
             6D 61 70 20 73 65 74
             20 2F 2F 20 62 65 65
             70 20 70 69 6E 20 72
             65 6D 61 70
      00023F 0D                    1277 	.db 0x0d
      000240 0A                    1278 	.db 0x0a
      000241 62 65 65 70 20 66 72  1279 	.ascii "beep freq 1000 // 1000Hz pulse generator.."
             65 71 20 31 30 30 30
             20 2F 2F 20 31 30 30
             30 48 7A 20 70 75 6C
             73 65 20 67 65 6E 65
             72 61 74 6F 72 2E 2E
      00026B 0D                    1280 	.db 0x0d
      00026C 0A                    1281 	.db 0x0a
      00026D 62 65 65 70 20 65 6E  1282 	.ascii "beep enable"
             61 62 6C 65
      000278 0D                    1283 	.db 0x0d
      000279 0A                    1284 	.db 0x0a
      00027A 62 65 65 70 20 64 69  1285 	.ascii "beep disable"
             73 61 62 6C 65
      000286 0D                    1286 	.db 0x0d
      000287 0A                    1287 	.db 0x0a
      000288 62 65 65 70 20 72 65  1288 	.ascii "beep remap  reset // reset"
             6D 61 70 20 20 72 65
             73 65 74 20 2F 2F 20
             72 65 73 65 74
      0002A2 0D                    1289 	.db 0x0d
      0002A3 0A                    1290 	.db 0x0a
      0002A4 65 78 32 29           1291 	.ascii "ex2)"
      0002A8 0D                    1292 	.db 0x0d
      0002A9 0A                    1293 	.db 0x0a
      0002AA 62 65 65 70 20 73 74  1294 	.ascii "beep start  4000  200// 4KHz freq 200 msec delay"
             61 72 74 20 20 34 30
             30 30 20 20 32 30 30
             2F 2F 20 34 4B 48 7A
             20 66 72 65 71 20 32
             30 30 20 6D 73 65 63
             20 64 65 6C 61 79
      0002DA 0D                    1295 	.db 0x0d
      0002DB 0A                    1296 	.db 0x0a
      0002DC 62 65 65 70 20 74 6F  1297 	.ascii "beep toggle 1000 /// 500msec per on/off, gpio beep pin test."
             67 67 6C 65 20 31 30
             30 30 20 2F 2F 2F 20
             35 30 30 6D 73 65 63
             20 70 65 72 20 6F 6E
             2F 6F 66 66 2C 20 67
             70 69 6F 20 62 65 65
             70 20 70 69 6E 20 74
             65 73 74 2E
      000318 2E 2E                 1298 	.ascii ".."
      00031A 0D                    1299 	.db 0x0d
      00031B 0A                    1300 	.db 0x0a
      00031C 2F 2F 20 67 70 69 6F  1301 	.ascii "// gpio beep pin toggle... per 1000 msec.."
             20 62 65 65 70 20 70
             69 6E 20 74 6F 67 67
             6C 65 2E 2E 2E 20 70
             65 72 20 31 30 30 30
             20 6D 73 65 63 2E 2E
      000346 0D                    1302 	.db 0x0d
      000347 0A                    1303 	.db 0x0a
      000348 00                    1304 	.db 0x00
                                   1305 	.area CODE
                                   1306 	.area CONST
      000349                       1307 __str_31:
      000349 62 65 65 70 20 69 6E  1308 	.ascii "beep init [%d : SEL(%d) : DIV(%d)] Hz"
             69 74 20 5B 25 64 20
             3A 20 53 45 4C 28 25
             64 29 20 3A 20 44 49
             56 28 25 64 29 5D 20
             48 7A
      00036E 0D                    1309 	.db 0x0d
      00036F 0A                    1310 	.db 0x0a
      000370 00                    1311 	.db 0x00
                                   1312 	.area CODE
                                   1313 	.area CONST
      000371                       1314 __str_32:
      000371 62 65 65 70 20 69 6E  1315 	.ascii "beep init error... [%d] Hz"
             69 74 20 65 72 72 6F
             72 2E 2E 2E 20 5B 25
             64 5D 20 48 7A
      00038B 0D                    1316 	.db 0x0d
      00038C 0A                    1317 	.db 0x0a
      00038D 00                    1318 	.db 0x00
                                   1319 	.area CODE
                                   1320 	.area CONST
      00038E                       1321 ___str_33:
      00038E 62 65 65 70           1322 	.ascii "beep"
      000392 00                    1323 	.db 0x00
                                   1324 	.area CODE
                                   1325 	.area CONST
      000393                       1326 ___str_34:
      000393 20 20 62 65 65 70 20  1327 	.ascii "  beep {write} [addr] [data]  "
             7B 77 72 69 74 65 7D
             20 5B 61 64 64 72 5D
             20 5B 64 61 74 61 5D
             20 20
      0003B1 0D                    1328 	.db 0x0d
      0003B2 0A                    1329 	.db 0x0a
      0003B3 20 20 62 65 65 70 20  1330 	.ascii "  beep {read} [addr] "
             7B 72 65 61 64 7D 20
             5B 61 64 64 72 5D 20
      0003C8 0D                    1331 	.db 0x0d
      0003C9 0A                    1332 	.db 0x0a
      0003CA 20 20 62 65 65 70 20  1333 	.ascii "  beep {init} "
             7B 69 6E 69 74 7D 20
      0003D8 0D                    1334 	.db 0x0d
      0003D9 0A                    1335 	.db 0x0a
      0003DA 20 20 62 65 65 70 20  1336 	.ascii "  beep {remap} {set/reset}"
             7B 72 65 6D 61 70 7D
             20 7B 73 65 74 2F 72
             65 73 65 74 7D
      0003F4 0D                    1337 	.db 0x0d
      0003F5 0A                    1338 	.db 0x0a
      0003F6 20 20 62 65 65 70 20  1339 	.ascii "  beep {freq} [data:(?)Hz] "
             7B 66 72 65 71 7D 20
             5B 64 61 74 61 3A 28
             3F 29 48 7A 5D 20
      000411 0D                    1340 	.db 0x0d
      000412 0A                    1341 	.db 0x0a
      000413 20 20 62 65 65 70 20  1342 	.ascii "  beep {enable} "
             7B 65 6E 61 62 6C 65
             7D 20
      000423 0D                    1343 	.db 0x0d
      000424 0A                    1344 	.db 0x0a
      000425 20 20 62 65 65 70 20  1345 	.ascii "  beep {disable} "
             7B 64 69 73 61 62 6C
             65 7D 20
      000436 0D                    1346 	.db 0x0d
      000437 0A                    1347 	.db 0x0a
      000438 20 20 62 65 65 70 20  1348 	.ascii "  beep {start} [data:(?)Hz] [delay:(?)msec] 0:continous"
             7B 73 74 61 72 74 7D
             20 5B 64 61 74 61 3A
             28 3F 29 48 7A 5D 20
             5B 64 65 6C 61 79 3A
             28 3F 29 6D 73 65 63
             5D 20 30 3A 63 6F 6E
             74 69 6E 6F 75 73
      00046F 0D                    1349 	.db 0x0d
      000470 0A                    1350 	.db 0x0a
      000471 20 20 62 65 65 70 20  1351 	.ascii "  beep {toggle} [data:(?)msec] GPIO toggle"
             7B 74 6F 67 67 6C 65
             7D 20 5B 64 61 74 61
             3A 28 3F 29 6D 73 65
             63 5D 20 47 50 49 4F
             20 74 6F 67 67 6C 65
      00049B 0D                    1352 	.db 0x0d
      00049C 0A                    1353 	.db 0x0a
      00049D 20 20 62 65 65 70 20  1354 	.ascii "  beep {help}  beep help."
             7B 68 65 6C 70 7D 20
             20 62 65 65 70 20 68
             65 6C 70 2E
      0004B6 0D                    1355 	.db 0x0d
      0004B7 0A                    1356 	.db 0x0a
      0004B8 00                    1357 	.db 0x00
                                   1358 	.area CODE
                                   1359 	.area INITIALIZER
      000000                       1360 __xinit__gbDelayData:
      000000 00                    1361 	.db #0x00	; 0
      000001                       1362 __xinit__cmdTbl_only:
      000001r03r8E                 1363 	.dw ___str_33
      000003r00r66                 1364 	.dw _DoBEEP
      000005r03r93                 1365 	.dw ___str_34
      000007 00 00                 1366 	.dw #0x0000
      000009 00 00                 1367 	.dw #0x0000
      00000B 00 00                 1368 	.dw #0x0000
                                   1369 	.area CABS (ABS)
